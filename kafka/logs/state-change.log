[2023-02-14 17:15:47,345] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-14 17:18:41,153] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-14 17:18:41,153] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-02-14 17:19:29,959] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-14 17:19:29,960] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(3) for 0 partitions (state.change.logger)
[2023-02-14 17:25:04,624] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-0 state from NonExistentPartition to NewPartition with assigned replicas 3,1 (state.change.logger)
[2023-02-14 17:25:04,624] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-1 state from NonExistentPartition to NewPartition with assigned replicas 1,2 (state.change.logger)
[2023-02-14 17:25:04,624] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-2 state from NonExistentPartition to NewPartition with assigned replicas 2,3 (state.change.logger)
[2023-02-14 17:25:04,625] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 17:25:04,627] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 17:25:04,645] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 17:25:04,645] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 17:25:04,645] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 17:25:04,647] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 17:25:04,648] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 17:25:04,648] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 3 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 17:25:04,648] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 3 partitions (state.change.logger)
[2023-02-14 17:25:04,650] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 17:25:04,653] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,653] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,655] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 2 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,672] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-14 17:25:04,674] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 2 from controller 1 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-14 17:25:04,762] INFO [Broker id=1] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 17:25:04,770] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 17:25:04,806] INFO [Broker id=1] Follower my-kafka-topic-1-0 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 17:25:04,807] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 3 for 1 partitions (state.change.logger)
[2023-02-14 17:25:04,811] INFO [Broker id=2] Follower my-kafka-topic-1-1 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 17:25:04,811] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 2 for 1 partitions (state.change.logger)
[2023-02-14 17:25:04,850] INFO [Broker id=1] Finished LeaderAndIsr request in 199ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,857] INFO [Broker id=2] Finished LeaderAndIsr request in 204ms correlationId 2 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,860] INFO [Broker id=1] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-02-14 17:25:04,866] INFO [Broker id=2] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
[2023-02-14 17:25:41,120] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-14 17:25:41,121] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-02-14 17:25:41,121] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-02-14 20:30:22,543] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 20:30:22,550] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:30:22,602] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 2 with 16 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:30:22,602] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:30:22,602] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 50 partitions (state.change.logger)
[2023-02-14 20:30:22,603] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 20:30:22,607] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:30:22,606] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 1 for 16 partitions (state.change.logger)
[2023-02-14 20:30:22,616] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 6 from controller 1 epoch 1 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-14 20:30:22,621] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 1 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-02-14 20:30:22,640] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,648] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,665] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,683] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,693] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,713] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,718] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,739] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,743] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,759] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,773] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,784] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,797] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,810] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,830] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,832] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,863] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,865] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,887] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,900] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,917] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,948] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,948] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,979] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,984] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,001] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,016] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,024] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,044] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,051] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,061] INFO [Broker id=1] Finished LeaderAndIsr request in 454ms correlationId 6 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:30:23,062] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2023-02-14 20:30:23,075] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,104] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,129] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,174] INFO [Broker id=2] Finished LeaderAndIsr request in 568ms correlationId 5 from controller 1 for 16 partitions (state.change.logger)
[2023-02-14 20:30:23,176] INFO [Broker id=2] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2023-02-14 20:33:57,467] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-14 20:33:57,499] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 18 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 20:33:57,501] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 19 partitions (state.change.logger)
[2023-02-14 20:33:57,540] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition my-kafka-topic-1-1 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:2,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:2,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 20:33:57,564] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 36 partitions (state.change.logger)
[2023-02-14 20:33:57,588] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-14 20:33:57,600] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,602] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,602] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,602] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,608] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,608] INFO [Controller id=1 epoch=2] Changed partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:33:57,608] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:33:57,609] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,610] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 2 as part of the become-leader transition for 18 partitions (state.change.logger)
[2023-02-14 20:33:57,621] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,633] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,639] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,646] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,654] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,660] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,666] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,672] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,676] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,682] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,688] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,693] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,700] INFO [Broker id=1] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 0 from offset 18 with partition epoch 0, high watermark 18, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,701] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,707] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,711] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,717] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,722] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,729] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition my-kafka-topic-1-0 (last update controller epoch 1) but cannot become follower since the new leader 3 is unavailable. (state.change.logger)
[2023-02-14 20:33:57,730] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-14 20:33:57,771] INFO [Broker id=1] Finished LeaderAndIsr request in 183ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-14 20:33:57,778] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-02-14 20:33:57,780] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 20:33:57,780] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,781] INFO [Broker id=1] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 1 from offset 18 with partition epoch 1, high watermark 18, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-02-14 20:33:57,787] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 2 for partition my-kafka-topic-1-0 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:33:57,787] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-14 20:33:57,787] INFO [Broker id=1] Finished LeaderAndIsr request in 7ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 20:33:57,789] INFO [Broker id=1] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-02-14 20:33:57,790] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,791] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,791] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,797] INFO [Broker id=1] Finished LeaderAndIsr request in 7ms correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,798] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2023-02-14 20:34:03,888] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-14 20:34:03,889] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(2) for 53 partitions (state.change.logger)
[2023-02-14 20:34:03,892] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 18 become-follower partitions (state.change.logger)
[2023-02-14 20:34:03,893] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 18 partitions (state.change.logger)
[2023-02-14 20:34:03,894] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2023-02-14 20:34:03,912] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,912] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 17 partitions (state.change.logger)
[2023-02-14 20:34:03,917] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 9 (state.change.logger)
[2023-02-14 20:34:04,075] INFO [Broker id=2] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2023-02-14 20:34:04,096] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-14 20:34:04,115] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-35 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,118] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition my-kafka-topic-1-2 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,119] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-5 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,121] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-20 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,121] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-41 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,122] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-29 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,122] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-44 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,122] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-14 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,123] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-2 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,123] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-23 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,124] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-38 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,126] INFO [Broker id=2] Follower my-kafka-topic-1-1 starts at leader epoch 1 from offset 18 with partition epoch 1 and high watermark 18. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,126] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-8 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,126] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-11 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,126] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-26 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,127] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-47 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,127] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-17 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,128] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-32 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,131] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 1 partitions (state.change.logger)
[2023-02-14 20:34:04,167] INFO [Broker id=2] Finished LeaderAndIsr request in 71ms correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-14 20:34:04,171] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-02-14 20:34:04,173] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:34:04,175] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-14 20:34:04,179] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,190] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 2 from offset 15 with partition epoch 3, high watermark 15, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,199] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,206] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,209] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-02-14 20:34:04,210] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 10 (state.change.logger)
[2023-02-14 20:34:04,212] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,218] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,224] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,229] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,234] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,240] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,245] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,251] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,255] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,260] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,264] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,269] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,273] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,305] INFO [Broker id=2] Finished LeaderAndIsr request in 132ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:34:04,308] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-02-14 20:34:04,309] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2023-02-14 20:34:09,468] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-14 20:34:09,470] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-14 20:34:09,470] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-14 20:34:09,470] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-14 20:34:09,472] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 12 (state.change.logger)
[2023-02-14 20:34:09,472] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 7 (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,487] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:34:09,487] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 17 partitions (state.change.logger)
[2023-02-14 20:34:09,489] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 13 (state.change.logger)
[2023-02-14 20:34:09,489] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2023-02-14 20:34:09,652] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2023-02-14 20:34:09,673] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-14 20:34:09,699] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-3 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,780] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-18 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,810] INFO [Broker id=3] Follower my-kafka-topic-1-2 starts at leader epoch 2 from offset 0 with partition epoch 3 and high watermark 0. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:09,810] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-39 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,824] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-9 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,839] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-24 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,869] INFO [Broker id=3] Follower my-kafka-topic-1-0 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:09,869] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-27 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,883] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-42 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,897] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-12 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,911] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-33 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,925] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-48 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,941] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-21 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,955] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-36 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,970] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-6 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,984] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-45 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,998] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-15 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:10,015] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-30 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:10,029] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-0 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:10,044] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 2 partitions (state.change.logger)
[2023-02-14 20:34:10,081] INFO [Broker id=3] Finished LeaderAndIsr request in 408ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-14 20:34:10,086] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-02-14 20:34:10,087] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:34:10,089] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-14 20:34:10,091] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-14 20:34:10,091] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 14 (state.change.logger)
[2023-02-14 20:34:10,091] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 9 (state.change.logger)
[2023-02-14 20:34:10,096] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,105] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,111] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,116] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,122] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,128] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,134] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,140] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,144] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,150] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,155] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,160] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,165] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-14 20:34:10,166] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,167] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 15 (state.change.logger)
[2023-02-14 20:34:10,167] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 10 (state.change.logger)
[2023-02-14 20:34:10,173] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,177] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,183] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,187] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,220] INFO [Broker id=3] Finished LeaderAndIsr request in 133ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:34:10,222] INFO [Broker id=3] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-02-14 20:34:10,224] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2023-02-14 20:34:10,225] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2023-02-16 17:51:34,870] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-16 17:51:34,913] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 1 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 17:51:34,915] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1) for 19 partitions (state.change.logger)
[2023-02-16 17:51:34,961] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,962] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,962] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,962] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,962] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,962] INFO [Controller id=1 epoch=3] Partition my-kafka-topic-1-1 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:2,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,962] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,963] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,963] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,963] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,963] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,963] INFO [Controller id=1 epoch=3] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:5,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,963] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,964] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,964] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,964] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,964] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,964] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,988] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,988] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,988] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,988] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,988] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,988] INFO [Controller id=1 epoch=3] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:6,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,989] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,989] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,989] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,989] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,989] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,989] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,989] INFO [Controller id=1 epoch=3] Partition my-kafka-topic-1-0 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:4,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,990] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,990] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,990] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,990] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,990] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,990] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 17:51:34,990] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 1 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 17:51:34,990] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1) for 36 partitions (state.change.logger)
[2023-02-16 17:51:35,004] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 17:51:35,041] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,041] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 3 as part of the become-leader transition for 19 partitions (state.change.logger)
[2023-02-16 17:51:35,044] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,044] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,045] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,045] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,045] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,046] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,046] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,047] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,047] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,047] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,048] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,048] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,049] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,049] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,050] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,050] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,050] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,051] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,051] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,052] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,052] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,052] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,053] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,053] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,054] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,054] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,054] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,055] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,055] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,055] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,055] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,056] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,056] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:35,057] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-16 17:51:35,063] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,079] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,087] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,096] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 2 from offset 41593 with partition epoch 3, high watermark 41593, ISR [1,3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,097] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,105] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,111] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,118] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,124] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,130] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,136] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,141] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,146] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,152] INFO [Broker id=1] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 1 from offset 41613 with partition epoch 2, high watermark 41613, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,153] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,158] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,164] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,169] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,176] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:35,232] INFO [Broker id=1] Finished LeaderAndIsr request in 229ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 17:51:35,241] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-02-16 17:51:35,243] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-16 17:51:35,244] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 3 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-02-16 17:51:35,244] INFO [Broker id=1] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 2 from offset 41613 with partition epoch 3, high watermark 41613, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 1. (state.change.logger)
[2023-02-16 17:51:35,251] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 3 from offset 41593 with partition epoch 4, high watermark 41593, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 2. (state.change.logger)
[2023-02-16 17:51:35,257] INFO [Broker id=1] Finished LeaderAndIsr request in 14ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-16 17:51:35,260] INFO [Broker id=1] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 4 (state.change.logger)
[2023-02-16 17:51:43,500] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-16 17:51:43,501] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(2) for 53 partitions (state.change.logger)
[2023-02-16 17:51:43,504] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 18 become-follower partitions (state.change.logger)
[2023-02-16 17:51:43,505] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2) for 18 partitions (state.change.logger)
[2023-02-16 17:51:43,506] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 6 (state.change.logger)
[2023-02-16 17:51:43,530] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,531] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,531] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,531] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,531] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,531] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,532] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,532] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,532] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,532] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,532] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,532] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,532] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,533] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,533] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,533] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,533] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,533] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,534] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,535] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,535] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,535] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,535] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,535] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,535] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:43,535] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 2 with 16 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 17:51:43,535] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2) for 16 partitions (state.change.logger)
[2023-02-16 17:51:43,537] INFO [Broker id=1] Add 16 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 7 (state.change.logger)
[2023-02-16 17:51:43,704] INFO [Broker id=2] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 0 (state.change.logger)
[2023-02-16 17:51:43,728] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 17:51:43,754] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-35 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,758] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition my-kafka-topic-1-2 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,759] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-5 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,759] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-20 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,760] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-41 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,760] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-29 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,761] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-44 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,762] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-14 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,762] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-2 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,763] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-23 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,765] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-38 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,769] INFO [Broker id=2] Follower my-kafka-topic-1-1 starts at leader epoch 2 from offset 41613 with partition epoch 3 and high watermark 41613. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,769] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-8 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,770] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-11 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,770] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-26 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,771] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-47 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,771] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-17 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,772] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-32 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:43,775] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 3 with correlation id 1 for 1 partitions (state.change.logger)
[2023-02-16 17:51:43,820] INFO [Broker id=2] Finished LeaderAndIsr request in 93ms correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 17:51:43,824] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-02-16 17:51:43,825] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 16 partitions (state.change.logger)
[2023-02-16 17:51:43,828] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 3 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-02-16 17:51:43,832] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,841] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,848] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,854] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,861] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,866] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,869] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-02-16 17:51:43,871] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 8 (state.change.logger)
[2023-02-16 17:51:43,872] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,878] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,883] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,889] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,894] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,899] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,904] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,909] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,914] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,919] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:43,949] INFO [Broker id=2] Finished LeaderAndIsr request in 124ms correlationId 3 from controller 1 for 16 partitions (state.change.logger)
[2023-02-16 17:51:43,952] INFO [Broker id=2] Add 16 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 4 (state.change.logger)
[2023-02-16 17:51:43,953] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 5 (state.change.logger)
[2023-02-16 17:51:52,764] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-16 17:51:52,766] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-16 17:51:52,767] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 17:51:52,768] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-16 17:51:52,769] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 10 (state.change.logger)
[2023-02-16 17:51:52,770] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 7 (state.change.logger)
[2023-02-16 17:51:52,787] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,787] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,787] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,787] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=5, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=4, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 17:51:52,788] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 3 with 18 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 17:51:52,789] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 18 partitions (state.change.logger)
[2023-02-16 17:51:52,789] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 8 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 17:51:52,790] INFO [Broker id=2] Follower my-kafka-topic-1-2 starts at leader epoch 5 from offset 41628 with partition epoch 7 and high watermark 41628. Current leader is 3. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:52,790] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 3 with correlation id 8 for 1 partitions (state.change.logger)
[2023-02-16 17:51:52,790] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 11 (state.change.logger)
[2023-02-16 17:51:52,805] INFO [Broker id=2] Finished LeaderAndIsr request in 16ms correlationId 8 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 17:51:52,807] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 9 (state.change.logger)
[2023-02-16 17:51:52,991] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 0 (state.change.logger)
[2023-02-16 17:51:53,006] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 17:51:53,029] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-3 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,034] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-18 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,036] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition my-kafka-topic-1-2 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,038] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-39 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,039] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-9 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,040] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-24 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,045] INFO [Broker id=3] Follower my-kafka-topic-1-0 starts at leader epoch 3 from offset 41593 with partition epoch 4 and high watermark 41593. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,045] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-27 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,046] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-42 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,047] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-12 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,049] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-33 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,050] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-48 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,050] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-21 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,051] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-36 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,051] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-6 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,052] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-45 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,053] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-15 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,054] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-30 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,054] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 3 for partition __consumer_offsets-0 (last update controller epoch 3) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 17:51:53,058] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 3 with correlation id 1 for 1 partitions (state.change.logger)
[2023-02-16 17:51:53,101] INFO [Broker id=3] Finished LeaderAndIsr request in 95ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 17:51:53,107] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 2 (state.change.logger)
[2023-02-16 17:51:53,108] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 17:51:53,112] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 3 as part of the become-leader transition for 18 partitions (state.change.logger)
[2023-02-16 17:51:53,112] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 17:51:53,114] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 12 (state.change.logger)
[2023-02-16 17:51:53,114] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 10 (state.change.logger)
[2023-02-16 17:51:53,118] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,128] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,137] INFO [Broker id=3] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 5 from offset 41628 with partition epoch 7, high watermark 41628, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,145] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,152] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,158] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,164] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,170] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,176] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,180] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,186] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,191] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,196] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,201] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,206] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,210] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,217] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,221] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 65631 with partition epoch 4, high watermark 65631, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 17:51:53,253] INFO [Broker id=3] Finished LeaderAndIsr request in 145ms correlationId 3 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 17:51:53,255] INFO [Broker id=3] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 4 (state.change.logger)
[2023-02-16 17:51:53,257] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 5 (state.change.logger)
[2023-02-16 17:51:54,073] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 17:51:54,074] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 13 (state.change.logger)
[2023-02-16 17:51:54,074] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 6 (state.change.logger)
[2023-02-16 17:51:54,075] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 11 (state.change.logger)
[2023-02-16 20:57:01,916] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-16 20:57:01,929] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,929] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,929] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,929] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,930] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,931] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,931] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,931] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,931] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,931] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,931] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,931] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,933] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,933] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,933] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,933] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,933] ERROR [Controller id=1 epoch=3] Controller 1 epoch 3 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 20:57:01,933] INFO [Controller id=1 epoch=3] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 20:57:01,933] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 20:57:01,933] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition my-kafka-topic-1-2 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:9,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,947] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition my-kafka-topic-1-0 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:4,ZkVersion:6,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:3) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 20:57:01,948] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 20:57:01,949] INFO [Controller id=1 epoch=3] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 20:57:01,949] INFO [Controller id=1 epoch=3] Sending UpdateMetadata request to brokers HashSet(1, 2) for 19 partitions (state.change.logger)
[2023-02-16 20:57:01,949] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 14 (state.change.logger)
[2023-02-16 20:57:01,950] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 15 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,951] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 15 from controller 1 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,951] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 4 from offset 635486 with partition epoch 6, high watermark 635485, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 3. (state.change.logger)
[2023-02-16 20:57:01,949] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 12 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,958] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 12 from controller 1 epoch 3 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,960] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 6 from offset 636708 with partition epoch 9, high watermark 636706, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 5. (state.change.logger)
[2023-02-16 20:57:01,962] INFO [Broker id=1] Finished LeaderAndIsr request in 12ms correlationId 15 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,963] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 16 (state.change.logger)
[2023-02-16 20:57:01,981] INFO [Broker id=2] Finished LeaderAndIsr request in 32ms correlationId 12 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,984] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 13 (state.change.logger)
[2023-02-16 20:57:01,985] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 14 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,987] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 14 epoch 3 for partition my-kafka-topic-1-2 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-02-16 20:57:01,988] INFO [Broker id=2] Finished LeaderAndIsr request in 3ms correlationId 14 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 20:57:01,990] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 3 with correlation id 15 (state.change.logger)
[2023-02-16 21:18:34,101] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-02-16 21:18:34,139] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:18:34,141] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2) for 18 partitions (state.change.logger)
[2023-02-16 21:18:34,198] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,198] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,198] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,198] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,198] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,198] INFO [Controller id=2 epoch=4] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:7,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,198] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,199] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,199] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,199] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,199] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,199] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,199] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,199] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,200] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,200] INFO [Controller id=2 epoch=4] Partition my-kafka-topic-1-1 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:5,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,200] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,200] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,200] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:4) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,220] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 2 for 18 partitions (state.change.logger)
[2023-02-16 21:18:34,220] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition my-kafka-topic-1-2 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:9,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,221] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:7,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:6,ZkVersion:6,ControllerEpoch:4) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:18:34,222] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:18:34,223] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2) for 37 partitions (state.change.logger)
[2023-02-16 21:18:34,275] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 2 epoch 4 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:18:34,280] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,283] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,284] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,284] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,285] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,286] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,286] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,286] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,286] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,287] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,287] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,288] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,288] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,288] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,289] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,290] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,290] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,290] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,291] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,291] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,291] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,292] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,292] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,292] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,293] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,293] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,293] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,294] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,294] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,294] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,295] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,295] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,295] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,296] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,296] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:34,297] INFO [Controller id=2 epoch=4] Changed partition my-kafka-topic-1-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=4, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:18:34,298] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:18:34,298] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2) for 1 partitions (state.change.logger)
[2023-02-16 21:18:34,298] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,312] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 6 from offset 709695 with partition epoch 9, high watermark 709695, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,315] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,322] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,329] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,337] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,343] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,350] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,355] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,362] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,368] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,373] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,378] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,384] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,389] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,395] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,401] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,408] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition my-kafka-topic-1-1 (last update controller epoch 3) but cannot become follower since the new leader 1 is unavailable. (state.change.logger)
[2023-02-16 21:18:34,408] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 4 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:18:34,465] INFO [Broker id=2] Finished LeaderAndIsr request in 246ms correlationId 1 from controller 2 for 18 partitions (state.change.logger)
[2023-02-16 21:18:34,472] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 2 (state.change.logger)
[2023-02-16 21:18:34,474] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 2 for 2 partitions (state.change.logger)
[2023-02-16 21:18:34,475] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 2 with correlation id 3 epoch 4 for partition my-kafka-topic-1-2 since its associated leader epoch 6 matches the current leader epoch (state.change.logger)
[2023-02-16 21:18:34,475] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 3 from controller 2 epoch 4 for partition my-kafka-topic-1-1 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:34,476] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 2 epoch 4 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-16 21:18:34,476] INFO [Broker id=2] Finished LeaderAndIsr request in 2ms correlationId 3 from controller 2 for 2 partitions (state.change.logger)
[2023-02-16 21:18:34,478] INFO [Broker id=2] Add 37 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 4 (state.change.logger)
[2023-02-16 21:18:34,479] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 2 for 1 partitions (state.change.logger)
[2023-02-16 21:18:34,480] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 2 epoch 4 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 21:18:34,480] INFO [Broker id=2] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 4 from offset 705477 with partition epoch 6, high watermark 705477, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:34,488] INFO [Broker id=2] Finished LeaderAndIsr request in 9ms correlationId 5 from controller 2 for 1 partitions (state.change.logger)
[2023-02-16 21:18:34,489] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 6 (state.change.logger)
[2023-02-16 21:18:40,729] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-02-16 21:18:40,731] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-16 21:18:40,733] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:18:40,734] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2, 3) for 19 partitions (state.change.logger)
[2023-02-16 21:18:40,735] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 8 (state.change.logger)
[2023-02-16 21:18:40,756] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,756] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,756] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,757] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,757] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,757] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,757] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,757] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,758] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,758] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,758] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,758] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,758] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,758] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,758] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,759] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,759] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,759] ERROR [Controller id=2 epoch=4] Controller 2 epoch 4 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=7, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=7) (state.change.logger)
[2023-02-16 21:18:40,759] INFO [Controller id=2 epoch=4] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:18:40,760] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2, 3) for 17 partitions (state.change.logger)
[2023-02-16 21:18:40,761] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 9 (state.change.logger)
[2023-02-16 21:18:40,950] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 0 (state.change.logger)
[2023-02-16 21:18:40,973] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 2 for 19 partitions (state.change.logger)
[2023-02-16 21:18:40,997] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-3 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,000] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-18 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,004] INFO [Broker id=3] Follower my-kafka-topic-1-2 starts at leader epoch 6 from offset 636708 with partition epoch 9 and high watermark 636620. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,004] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-39 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,004] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-9 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,005] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-24 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,005] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition my-kafka-topic-1-0 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,006] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-27 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,006] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-42 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,007] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-12 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,007] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-33 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,008] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-48 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,008] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-21 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,009] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-36 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,010] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-6 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,010] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-45 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,011] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-15 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,011] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-30 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,012] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 2 epoch 4 for partition __consumer_offsets-0 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:18:41,014] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 2 epoch 4 with correlation id 1 for 1 partitions (state.change.logger)
[2023-02-16 21:18:41,059] INFO [Broker id=3] Finished LeaderAndIsr request in 85ms correlationId 1 from controller 2 for 19 partitions (state.change.logger)
[2023-02-16 21:18:41,064] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 2 (state.change.logger)
[2023-02-16 21:18:41,065] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 2 for 17 partitions (state.change.logger)
[2023-02-16 21:18:41,069] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 2 epoch 4 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:18:41,073] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,085] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,092] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,099] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,107] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,115] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,123] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,132] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,140] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,146] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,155] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,163] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,172] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,180] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,190] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,196] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 0 with partition epoch 7, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,203] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 7 from offset 1164112 with partition epoch 7, high watermark 1163944, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:18:41,241] INFO [Broker id=3] Finished LeaderAndIsr request in 175ms correlationId 3 from controller 2 for 17 partitions (state.change.logger)
[2023-02-16 21:18:41,243] INFO [Broker id=3] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 4 (state.change.logger)
[2023-02-16 21:18:41,376] INFO [Controller id=2 epoch=4] Sending UpdateMetadata request to brokers HashSet(2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:18:41,378] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 10 (state.change.logger)
[2023-02-16 21:18:41,378] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 2 epoch 4 with correlation id 5 (state.change.logger)
[2023-02-16 21:26:48,902] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-16 21:26:48,958] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:26:48,960] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 19 partitions (state.change.logger)
[2023-02-16 21:26:49,000] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,000] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,001] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,001] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,001] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,001] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-1 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:7,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,001] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,001] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,001] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,002] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,002] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,002] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:11,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,002] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,002] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,002] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,003] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,003] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,003] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:5) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,027] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,028] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,028] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,028] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,028] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,028] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,028] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,028] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:7,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,029] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,030] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,030] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:26:49,030] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 2 become-follower partitions (state.change.logger)
[2023-02-16 21:26:49,030] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 36 partitions (state.change.logger)
[2023-02-16 21:26:49,053] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:26:49,090] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,092] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,093] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,093] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,094] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,094] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,095] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,095] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,095] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,095] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,096] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,096] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,096] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,097] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,097] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,097] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,098] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,098] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,098] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,098] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,099] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,099] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition my-kafka-topic-1-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,099] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,100] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,100] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,101] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,101] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,101] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,101] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,102] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,102] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,102] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,102] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,102] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,102] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-37 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,102] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-22 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-46 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-16 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-28 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,105] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Changed partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-34 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-10 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-40 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 18 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:26:49,106] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 18 partitions (state.change.logger)
[2023-02-16 21:26:49,108] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-7 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,109] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-22 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,110] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition my-kafka-topic-1-0 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,111] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-10 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,111] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-31 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,112] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-46 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,113] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-1 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,114] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-16 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,114] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-19 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,115] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-34 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,115] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-4 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,116] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-25 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,116] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition my-kafka-topic-1-1 (last update controller epoch 4) but cannot become follower since the new leader 2 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,117] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-40 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,118] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-43 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,121] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-13 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,123] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-28 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,123] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-49 (last update controller epoch 4) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,127] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:26:49,140] INFO [Broker id=1] Finished LeaderAndIsr request in 90ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:26:49,149] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-02-16 21:26:49,150] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-16 21:26:49,150] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition my-kafka-topic-1-1 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,150] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 5 for partition my-kafka-topic-1-0 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:26:49,150] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-16 21:26:49,150] INFO [Broker id=1] Finished LeaderAndIsr request in 0ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-16 21:26:49,152] INFO [Broker id=1] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-02-16 21:26:49,153] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:26:49,155] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 5 as part of the become-leader transition for 18 partitions (state.change.logger)
[2023-02-16 21:26:49,159] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,167] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,173] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,181] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 6 from offset 704433 with partition epoch 8, high watermark 704433, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,188] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,194] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,199] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,203] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,209] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,214] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,218] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,223] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,228] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,232] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,237] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,243] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,248] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,252] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:26:49,290] INFO [Broker id=1] Finished LeaderAndIsr request in 136ms correlationId 5 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:26:49,291] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2023-02-16 21:27:36,166] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-16 21:27:36,167] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(2) for 53 partitions (state.change.logger)
[2023-02-16 21:27:36,170] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 18 become-follower partitions (state.change.logger)
[2023-02-16 21:27:36,170] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 18 partitions (state.change.logger)
[2023-02-16 21:27:36,171] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 8 (state.change.logger)
[2023-02-16 21:27:36,190] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,191] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,191] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,191] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,191] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,192] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,192] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,192] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,192] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,192] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,192] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,193] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,193] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,193] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,193] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,193] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,193] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,194] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition my-kafka-topic-1-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=8) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:27:36,194] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:27:36,195] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:27:36,195] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 17 partitions (state.change.logger)
[2023-02-16 21:27:36,195] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:27:36,197] INFO [Broker id=1] Follower my-kafka-topic-1-1 starts at leader epoch 6 from offset 705477 with partition epoch 8 and high watermark 705477. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,197] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 9 for 1 partitions (state.change.logger)
[2023-02-16 21:27:36,228] INFO [Broker id=1] Finished LeaderAndIsr request in 33ms correlationId 9 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:27:36,230] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 10 (state.change.logger)
[2023-02-16 21:27:36,355] INFO [Broker id=2] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 0 (state.change.logger)
[2023-02-16 21:27:36,368] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:27:36,387] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-35 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,392] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition my-kafka-topic-1-2 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,393] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-5 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,395] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-20 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,395] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-41 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,396] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-29 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,396] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-44 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,397] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-14 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,397] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-2 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,397] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-23 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,398] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-38 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,398] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition my-kafka-topic-1-1 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,399] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-8 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,399] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-11 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,400] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-26 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,400] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-47 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,400] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-17 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,401] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-32 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:27:36,403] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:27:36,410] INFO [Broker id=2] Finished LeaderAndIsr request in 42ms correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:27:36,414] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-02-16 21:27:36,416] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:27:36,419] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 5 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:27:36,428] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,439] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,444] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,450] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,455] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,461] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,466] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,471] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,476] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,482] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,488] INFO [Broker id=2] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 6 from offset 705477 with partition epoch 8, high watermark 705477, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,495] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,499] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,504] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,509] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,513] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,518] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:27:36,549] INFO [Broker id=2] Finished LeaderAndIsr request in 133ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:27:36,551] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-02-16 21:27:37,436] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-02-16 21:27:37,437] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 11 (state.change.logger)
[2023-02-16 21:27:37,437] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 5 (state.change.logger)
[2023-02-16 21:28:14,291] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-16 21:28:14,292] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-16 21:28:14,294] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:28:14,294] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-16 21:28:14,295] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 13 (state.change.logger)
[2023-02-16 21:28:14,295] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 7 (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,310] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,311] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:28:14,311] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:28:14,311] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 3 with 18 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:28:14,311] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 18 partitions (state.change.logger)
[2023-02-16 21:28:14,312] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 8 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:14,312] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 14 (state.change.logger)
[2023-02-16 21:28:14,313] INFO [Broker id=2] Follower my-kafka-topic-1-2 starts at leader epoch 9 from offset 709695 with partition epoch 13 and high watermark 709695. Current leader is 3. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,314] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 8 for 1 partitions (state.change.logger)
[2023-02-16 21:28:14,346] INFO [Broker id=2] Finished LeaderAndIsr request in 34ms correlationId 8 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:14,348] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 9 (state.change.logger)
[2023-02-16 21:28:14,522] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 0 (state.change.logger)
[2023-02-16 21:28:14,541] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:28:14,565] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-3 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,569] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-18 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,570] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition my-kafka-topic-1-2 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,571] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-39 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,577] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-9 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,578] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-24 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,581] INFO [Broker id=3] Follower my-kafka-topic-1-0 starts at leader epoch 6 from offset 635485 with partition epoch 8 and high watermark 635389. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,581] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-27 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,581] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-42 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,581] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-12 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,582] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-33 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,582] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-48 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,583] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-21 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,584] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-36 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,584] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-6 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,585] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-45 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,586] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-15 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,586] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-30 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,588] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-0 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:28:14,593] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:14,637] INFO [Broker id=3] Finished LeaderAndIsr request in 97ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:28:14,643] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-02-16 21:28:14,645] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:28:14,649] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 5 as part of the become-leader transition for 18 partitions (state.change.logger)
[2023-02-16 21:28:14,656] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,670] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,677] INFO [Broker id=3] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 9 from offset 709695 with partition epoch 13, high watermark 709695, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,689] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,698] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,707] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,716] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,726] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,735] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,745] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,754] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,764] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,772] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,782] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,791] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,801] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,811] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,821] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 1164112 with partition epoch 9, high watermark 1164112, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:28:14,885] INFO [Broker id=3] Finished LeaderAndIsr request in 240ms correlationId 3 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:28:14,887] INFO [Broker id=3] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-02-16 21:28:14,935] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:28:14,937] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 15 (state.change.logger)
[2023-02-16 21:28:14,937] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 10 (state.change.logger)
[2023-02-16 21:28:14,937] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 5 (state.change.logger)
[2023-02-16 21:28:15,610] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:28:15,611] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 16 (state.change.logger)
[2023-02-16 21:28:15,611] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 11 (state.change.logger)
[2023-02-16 21:28:15,611] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2023-02-16 21:28:46,923] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-16 21:28:46,930] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,931] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,931] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,931] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,931] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,931] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:28:46,933] INFO [Controller id=1 epoch=5] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=10, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:28:46,933] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:28:46,933] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,934] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 12 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,934] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 17 (state.change.logger)
[2023-02-16 21:28:46,935] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 12 from controller 1 epoch 5 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,935] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 10 from offset 709695 with partition epoch 15, high watermark 709695, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 9. (state.change.logger)
[2023-02-16 21:28:46,946] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-2 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:15,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-0 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,947] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:28:46,948] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:28:46,948] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:28:46,948] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 19 partitions (state.change.logger)
[2023-02-16 21:28:46,949] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 18 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,950] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 18 from controller 1 epoch 5 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,950] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 7 from offset 704433 with partition epoch 10, high watermark 704433, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 6. (state.change.logger)
[2023-02-16 21:28:46,951] INFO [Broker id=2] Finished LeaderAndIsr request in 17ms correlationId 12 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,953] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 13 (state.change.logger)
[2023-02-16 21:28:46,954] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 14 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,955] INFO [Broker id=2] Ignoring LeaderAndIsr request from controller 1 with correlation id 14 epoch 5 for partition my-kafka-topic-1-2 since its associated leader epoch 10 matches the current leader epoch (state.change.logger)
[2023-02-16 21:28:46,955] INFO [Broker id=2] Finished LeaderAndIsr request in 1ms correlationId 14 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,956] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 15 (state.change.logger)
[2023-02-16 21:28:46,957] INFO [Broker id=1] Finished LeaderAndIsr request in 8ms correlationId 18 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:28:46,959] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 19 (state.change.logger)
[2023-02-16 21:32:55,267] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-16 21:32:55,268] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-16 21:32:55,269] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:32:55,269] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-16 21:32:55,270] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 21 (state.change.logger)
[2023-02-16 21:32:55,270] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 17 (state.change.logger)
[2023-02-16 21:32:55,280] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,280] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,280] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,280] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,280] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,280] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,280] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,280] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:32:55,281] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 17 partitions (state.change.logger)
[2023-02-16 21:32:55,282] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 22 (state.change.logger)
[2023-02-16 21:32:55,282] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 18 (state.change.logger)
[2023-02-16 21:32:55,447] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 0 (state.change.logger)
[2023-02-16 21:32:55,465] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:32:55,484] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-3 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,487] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-18 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,490] INFO [Broker id=3] Follower my-kafka-topic-1-2 starts at leader epoch 10 from offset 709695 with partition epoch 15 and high watermark 709695. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,491] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-39 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,491] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-9 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,491] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-24 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,492] INFO [Broker id=3] Follower my-kafka-topic-1-0 starts at leader epoch 7 from offset 704433 with partition epoch 10 and high watermark 704433. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,492] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-27 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,493] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-42 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,493] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-12 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,493] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-33 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,494] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-48 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,494] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-21 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,495] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-36 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,495] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-6 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,496] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-45 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,496] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-15 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,497] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-30 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,497] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-0 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:32:55,499] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 1 for 2 partitions (state.change.logger)
[2023-02-16 21:32:55,540] INFO [Broker id=3] Finished LeaderAndIsr request in 77ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:32:55,546] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-02-16 21:32:55,547] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:32:55,547] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:32:55,548] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 23 (state.change.logger)
[2023-02-16 21:32:55,548] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 19 (state.change.logger)
[2023-02-16 21:32:55,551] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 5 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:32:55,552] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:32:55,553] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 24 (state.change.logger)
[2023-02-16 21:32:55,553] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 20 (state.change.logger)
[2023-02-16 21:32:55,556] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,565] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,570] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,575] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,581] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,585] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,589] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,595] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,599] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,605] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,610] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,615] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,621] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,627] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,632] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,636] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,640] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 1164112 with partition epoch 11, high watermark 1164112, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:32:55,673] INFO [Broker id=3] Finished LeaderAndIsr request in 126ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:32:55,675] INFO [Broker id=3] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-02-16 21:32:55,676] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 5 (state.change.logger)
[2023-02-16 21:32:55,677] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2023-02-16 21:33:25,929] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-16 21:33:25,932] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,933] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,934] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,934] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,934] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,934] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,934] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:33:25,934] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-2 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:17,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,944] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-0 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:12,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 19 partitions (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 25 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:33:25,945] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 21 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:33:25,946] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 25 from controller 1 epoch 5 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 21:33:25,946] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 8 from offset 704433 with partition epoch 12, high watermark 704433, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 7. (state.change.logger)
[2023-02-16 21:33:25,946] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 21 from controller 1 epoch 5 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 21:33:25,946] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 11 from offset 709695 with partition epoch 17, high watermark 709695, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 10. (state.change.logger)
[2023-02-16 21:33:25,952] INFO [Broker id=1] Finished LeaderAndIsr request in 7ms correlationId 25 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:33:25,953] INFO [Broker id=2] Finished LeaderAndIsr request in 8ms correlationId 21 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:33:25,954] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 26 (state.change.logger)
[2023-02-16 21:33:25,954] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 22 (state.change.logger)
[2023-02-16 21:36:58,597] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-16 21:36:58,597] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-16 21:36:58,598] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:36:58,599] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-16 21:36:58,599] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 24 (state.change.logger)
[2023-02-16 21:36:58,600] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 28 (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 17 partitions (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 29 (state.change.logger)
[2023-02-16 21:36:58,609] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 25 (state.change.logger)
[2023-02-16 21:36:58,779] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 0 (state.change.logger)
[2023-02-16 21:36:58,796] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:36:58,815] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-3 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,819] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-18 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,822] INFO [Broker id=3] Follower my-kafka-topic-1-2 starts at leader epoch 11 from offset 709695 with partition epoch 17 and high watermark 709695. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,822] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-39 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,822] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-9 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,823] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-24 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,825] INFO [Broker id=3] Follower my-kafka-topic-1-0 starts at leader epoch 8 from offset 704433 with partition epoch 12 and high watermark 704433. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,825] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-27 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,825] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-42 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,825] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-12 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,826] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-33 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,826] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-48 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,827] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-21 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,827] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-36 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,828] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-6 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,828] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-45 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,829] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-15 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,829] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-30 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,830] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-0 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:36:58,832] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 1 for 2 partitions (state.change.logger)
[2023-02-16 21:36:58,875] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:36:58,876] INFO [Broker id=3] Finished LeaderAndIsr request in 81ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:36:58,876] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 30 (state.change.logger)
[2023-02-16 21:36:58,876] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 26 (state.change.logger)
[2023-02-16 21:36:58,879] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:36:58,880] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-02-16 21:36:58,880] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 31 (state.change.logger)
[2023-02-16 21:36:58,880] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 27 (state.change.logger)
[2023-02-16 21:36:58,881] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:36:58,885] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 5 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:36:58,888] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,896] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,901] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,906] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,911] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,915] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,921] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,926] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,930] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,935] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,940] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,944] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,949] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,953] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,957] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,963] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 0 with partition epoch 13, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,968] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 13 from offset 1164112 with partition epoch 13, high watermark 1164112, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:36:58,998] INFO [Broker id=3] Finished LeaderAndIsr request in 117ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:36:58,999] INFO [Broker id=3] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-02-16 21:36:59,001] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 5 (state.change.logger)
[2023-02-16 21:36:59,002] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2023-02-16 21:37:28,916] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-16 21:37:28,919] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,919] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,919] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,919] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,919] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,920] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,921] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,921] ERROR [Controller id=1 epoch=5] Controller 1 epoch 5 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onReplicasBecomeOffline(KafkaController.scala:630)
	at kafka.controller.KafkaController.onBrokerFailure(KafkaController.scala:600)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1615)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:37:28,921] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-2 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:19,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition my-kafka-topic-1-0 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,930] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,931] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,931] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,931] INFO [Controller id=1 epoch=5] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:14,ControllerEpoch:5) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:37:28,931] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:37:28,931] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:37:28,931] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 19 partitions (state.change.logger)
[2023-02-16 21:37:28,931] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 32 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:37:28,931] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 28 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:37:28,932] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 32 from controller 1 epoch 5 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 21:37:28,932] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 9 from offset 704433 with partition epoch 14, high watermark 704433, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 8. (state.change.logger)
[2023-02-16 21:37:28,932] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 28 from controller 1 epoch 5 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-16 21:37:28,932] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 12 from offset 709695 with partition epoch 19, high watermark 709695, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was 11. (state.change.logger)
[2023-02-16 21:37:28,940] INFO [Broker id=2] Finished LeaderAndIsr request in 9ms correlationId 28 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:37:28,941] INFO [Broker id=1] Finished LeaderAndIsr request in 10ms correlationId 32 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:37:28,941] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 29 (state.change.logger)
[2023-02-16 21:37:28,942] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 33 (state.change.logger)
[2023-02-16 21:41:41,789] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-16 21:41:41,789] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-16 21:41:41,790] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:41:41,790] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-16 21:41:41,791] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 35 (state.change.logger)
[2023-02-16 21:41:41,791] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 31 (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=15) (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:41:41,802] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 17 partitions (state.change.logger)
[2023-02-16 21:41:41,803] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 36 (state.change.logger)
[2023-02-16 21:41:41,804] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 32 (state.change.logger)
[2023-02-16 21:41:41,974] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 0 (state.change.logger)
[2023-02-16 21:41:41,992] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:41:42,012] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-3 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,015] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-18 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,018] INFO [Broker id=3] Follower my-kafka-topic-1-2 starts at leader epoch 12 from offset 709695 with partition epoch 19 and high watermark 709695. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,018] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-39 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,018] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-9 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,019] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-24 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,023] INFO [Broker id=3] Follower my-kafka-topic-1-0 starts at leader epoch 9 from offset 704433 with partition epoch 14 and high watermark 704433. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,024] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-27 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,024] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-42 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,025] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-12 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,026] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-33 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,026] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-48 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,026] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-21 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,027] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-36 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,027] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-6 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,028] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-45 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,028] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-15 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,029] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-30 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,029] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 5 for partition __consumer_offsets-0 (last update controller epoch 5) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:41:42,032] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 5 with correlation id 1 for 2 partitions (state.change.logger)
[2023-02-16 21:41:42,075] INFO [Broker id=3] Finished LeaderAndIsr request in 83ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:41:42,078] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 2 (state.change.logger)
[2023-02-16 21:41:42,079] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:41:42,144] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 5 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:41:42,158] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:41:42,159] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 37 (state.change.logger)
[2023-02-16 21:41:42,159] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 33 (state.change.logger)
[2023-02-16 21:41:42,162] INFO [Controller id=1 epoch=5] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-16 21:41:42,163] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 38 (state.change.logger)
[2023-02-16 21:41:42,163] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 34 (state.change.logger)
[2023-02-16 21:41:42,164] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,174] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,179] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,184] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,191] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,196] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,201] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,206] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,211] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,215] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,220] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,225] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,230] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,234] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,238] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,243] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,248] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 1164112 with partition epoch 15, high watermark 1164112, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:41:42,285] INFO [Broker id=3] Finished LeaderAndIsr request in 206ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:41:42,287] INFO [Broker id=3] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 4 (state.change.logger)
[2023-02-16 21:41:42,288] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 5 (state.change.logger)
[2023-02-16 21:41:42,289] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 5 with correlation id 6 (state.change.logger)
[2023-02-16 21:46:22,134] INFO [Controller id=3 epoch=6] Sending UpdateMetadata request to brokers HashSet(3) for 0 partitions (state.change.logger)
[2023-02-16 21:46:22,168] INFO [Controller id=3 epoch=6] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 2 become-follower partitions (state.change.logger)
[2023-02-16 21:46:22,170] INFO [Controller id=3 epoch=6] Sending UpdateMetadata request to brokers HashSet(3) for 19 partitions (state.change.logger)
[2023-02-16 21:46:22,209] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,209] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,209] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,209] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,209] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:16,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,210] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,211] INFO [Controller id=3 epoch=6] Partition my-kafka-topic-1-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:10,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,211] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,211] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,211] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:3,ZkVersion:3,ControllerEpoch:6) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition my-kafka-topic-1-1 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:11,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,229] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:13,ZkVersion:21,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:7,ZkVersion:7,ControllerEpoch:6) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 2 become-follower partitions (state.change.logger)
[2023-02-16 21:46:22,230] INFO [Controller id=3 epoch=6] Sending UpdateMetadata request to brokers HashSet(3) for 36 partitions (state.change.logger)
[2023-02-16 21:46:22,262] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 3 for 19 partitions (state.change.logger)
[2023-02-16 21:46:22,268] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,271] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,271] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,271] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,272] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,272] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,272] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,272] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,272] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,273] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,273] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,273] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,273] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,274] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,274] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,274] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,275] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,275] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,275] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,276] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition my-kafka-topic-1-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,276] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,276] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,277] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,277] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,277] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,278] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,278] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,278] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,278] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,278] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,278] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,279] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,279] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,279] ERROR [Controller id=3 epoch=6] Controller 3 epoch 6 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:46:22,280] INFO [Controller id=3 epoch=6] Changed partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=11, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:46:22,280] INFO [Controller id=3 epoch=6] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=14, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=22) (state.change.logger)
[2023-02-16 21:46:22,280] INFO [Controller id=3 epoch=6] Sending LeaderAndIsr request to broker 3 with 2 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:46:22,280] INFO [Controller id=3 epoch=6] Sending UpdateMetadata request to brokers HashSet(3) for 2 partitions (state.change.logger)
[2023-02-16 21:46:22,288] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 3 epoch 6 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:46:22,298] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,307] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,313] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,318] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,323] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,329] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,335] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,340] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,345] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,351] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,358] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,363] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,369] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,377] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,383] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,389] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 0 with partition epoch 15, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,395] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 15 from offset 1164112 with partition epoch 15, high watermark 1164112, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,403] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 6 for partition my-kafka-topic-1-2 (last update controller epoch 5) but cannot become follower since the new leader 2 is unavailable. (state.change.logger)
[2023-02-16 21:46:22,403] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 6 for partition my-kafka-topic-1-0 (last update controller epoch 5) but cannot become follower since the new leader 1 is unavailable. (state.change.logger)
[2023-02-16 21:46:22,404] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 3 epoch 6 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:46:22,440] INFO [Broker id=3] Finished LeaderAndIsr request in 179ms correlationId 1 from controller 3 for 19 partitions (state.change.logger)
[2023-02-16 21:46:22,449] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 3 epoch 6 with correlation id 2 (state.change.logger)
[2023-02-16 21:46:22,450] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 3 for 2 partitions (state.change.logger)
[2023-02-16 21:46:22,451] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 3 from controller 3 epoch 6 for partition my-kafka-topic-1-2 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:46:22,451] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 3 from controller 3 epoch 6 for partition my-kafka-topic-1-0 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:46:22,451] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 3 epoch 6 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-16 21:46:22,452] INFO [Broker id=3] Finished LeaderAndIsr request in 2ms correlationId 3 from controller 3 for 2 partitions (state.change.logger)
[2023-02-16 21:46:22,454] INFO [Broker id=3] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 3 epoch 6 with correlation id 4 (state.change.logger)
[2023-02-16 21:46:22,455] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 5 from controller 3 for 2 partitions (state.change.logger)
[2023-02-16 21:46:22,455] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 3 epoch 6 as part of the become-leader transition for 2 partitions (state.change.logger)
[2023-02-16 21:46:22,457] INFO [Broker id=3] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 14 from offset 719185 with partition epoch 22, high watermark 719185, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,464] INFO [Broker id=3] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 11 from offset 714397 with partition epoch 17, high watermark 714397, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:46:22,470] INFO [Broker id=3] Finished LeaderAndIsr request in 15ms correlationId 5 from controller 3 for 2 partitions (state.change.logger)
[2023-02-16 21:46:22,472] INFO [Broker id=3] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 3 epoch 6 with correlation id 6 (state.change.logger)
[2023-02-16 21:47:06,199] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-16 21:47:06,232] INFO [Controller id=1 epoch=7] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:47:06,235] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1) for 19 partitions (state.change.logger)
[2023-02-16 21:47:06,271] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,272] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,272] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,272] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,272] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,272] INFO [Controller id=1 epoch=7] Partition my-kafka-topic-1-1 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:9,ZkVersion:12,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,272] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,272] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,272] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,273] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,273] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,273] INFO [Controller id=1 epoch=7] Partition my-kafka-topic-1-2 state changed to (Leader:3,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:22,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,273] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,273] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,273] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,273] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,273] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,274] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:8,ZkVersion:8,ControllerEpoch:7) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,293] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,294] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,294] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,294] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,294] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,294] INFO [Controller id=1 epoch=7] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:15,ZkVersion:23,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,294] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,294] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,294] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:18,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:16,ZkVersion:16,ControllerEpoch:7) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:47:06,295] INFO [Controller id=1 epoch=7] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 2 become-follower partitions (state.change.logger)
[2023-02-16 21:47:06,296] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1) for 36 partitions (state.change.logger)
[2023-02-16 21:47:06,331] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:47:06,349] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,351] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,351] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,351] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,352] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,352] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,352] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,352] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,352] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,353] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,353] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,353] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,353] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,354] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,354] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,354] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,354] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,355] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,355] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,355] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,356] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,356] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,356] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition my-kafka-topic-1-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,356] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,356] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,356] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,357] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,357] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,357] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,357] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,357] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,357] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,357] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,358] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,358] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,358] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:06,359] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-37 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-22 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-46 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-16 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-28 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-34 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-10 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-40 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=4, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=4) (state.change.logger)
[2023-02-16 21:47:06,360] INFO [Controller id=1 epoch=7] Sending LeaderAndIsr request to broker 1 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:47:06,361] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1) for 17 partitions (state.change.logger)
[2023-02-16 21:47:06,364] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-7 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,364] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-22 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,366] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition my-kafka-topic-1-0 (last update controller epoch 6) but cannot become follower since the new leader 3 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,366] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-10 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,367] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-31 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,367] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-46 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,368] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-1 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,369] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-16 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,370] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-19 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,370] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-34 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,371] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-4 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,371] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-25 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,372] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition my-kafka-topic-1-1 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,372] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-40 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,373] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-43 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,374] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-13 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,374] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-28 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,375] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-49 (last update controller epoch 6) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,377] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 7 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:47:06,391] INFO [Broker id=1] Finished LeaderAndIsr request in 61ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:47:06,402] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 2 (state.change.logger)
[2023-02-16 21:47:06,404] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-16 21:47:06,404] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 7 for partition my-kafka-topic-1-1 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,405] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 7 for partition my-kafka-topic-1-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:06,405] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 7 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-16 21:47:06,405] INFO [Broker id=1] Finished LeaderAndIsr request in 1ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-16 21:47:06,407] INFO [Broker id=1] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 4 (state.change.logger)
[2023-02-16 21:47:06,408] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:47:06,411] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 7 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:47:06,416] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,425] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,432] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,439] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,445] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,451] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,456] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,461] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,466] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,472] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,477] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,481] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,486] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,491] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,495] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,500] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,505] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 4 from offset 0 with partition epoch 4, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:06,538] INFO [Broker id=1] Finished LeaderAndIsr request in 130ms correlationId 5 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:47:06,540] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 6 (state.change.logger)
[2023-02-16 21:47:12,637] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-16 21:47:12,639] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(2) for 53 partitions (state.change.logger)
[2023-02-16 21:47:12,641] INFO [Controller id=1 epoch=7] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 18 become-follower partitions (state.change.logger)
[2023-02-16 21:47:12,641] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1, 2) for 18 partitions (state.change.logger)
[2023-02-16 21:47:12,643] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 8 (state.change.logger)
[2023-02-16 21:47:12,664] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,664] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,664] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,665] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,665] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,665] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,665] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,665] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,666] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,667] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,667] ERROR [Controller id=1 epoch=7] Controller 1 epoch 7 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition my-kafka-topic-1-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=10, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=13) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=9, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=9) (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:47:12,667] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1, 2) for 17 partitions (state.change.logger)
[2023-02-16 21:47:12,668] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 9 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:47:12,670] INFO [Broker id=1] Follower my-kafka-topic-1-1 starts at leader epoch 10 from offset 715138 with partition epoch 13 and high watermark 715138. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,670] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 7 with correlation id 9 for 1 partitions (state.change.logger)
[2023-02-16 21:47:12,701] INFO [Broker id=1] Finished LeaderAndIsr request in 33ms correlationId 9 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:47:12,703] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 10 (state.change.logger)
[2023-02-16 21:47:12,827] INFO [Broker id=2] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 0 (state.change.logger)
[2023-02-16 21:47:12,841] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:47:12,861] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-35 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,865] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition my-kafka-topic-1-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,866] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-5 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,866] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-20 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,868] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-41 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,868] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-29 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,869] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-44 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,869] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-14 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,869] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,870] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-23 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,870] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-38 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,871] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition my-kafka-topic-1-1 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,871] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-8 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,872] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-11 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,872] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-26 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,872] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-47 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,873] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-17 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,873] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 7 for partition __consumer_offsets-32 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:47:12,875] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 7 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:47:12,883] INFO [Broker id=2] Finished LeaderAndIsr request in 43ms correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:47:12,888] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 2 (state.change.logger)
[2023-02-16 21:47:12,889] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:47:12,892] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 7 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:47:12,897] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,907] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,913] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,919] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,925] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,931] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,936] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,940] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,945] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,949] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,955] INFO [Broker id=2] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 10 from offset 715138 with partition epoch 13, high watermark 715138, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,962] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,967] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,972] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,977] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,982] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:12,986] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 9 from offset 0 with partition epoch 9, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:47:13,016] INFO [Broker id=2] Finished LeaderAndIsr request in 127ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:47:13,017] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 4 (state.change.logger)
[2023-02-16 21:47:13,919] INFO [Controller id=1 epoch=7] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-02-16 21:47:13,920] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 11 (state.change.logger)
[2023-02-16 21:47:13,920] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 7 with correlation id 5 (state.change.logger)
[2023-02-16 21:53:31,562] INFO [Controller id=3 epoch=8] Sending UpdateMetadata request to brokers HashSet(3) for 0 partitions (state.change.logger)
[2023-02-16 21:53:31,592] INFO [Controller id=3 epoch=8] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:53:31,594] INFO [Controller id=3 epoch=8] Sending UpdateMetadata request to brokers HashSet(3) for 19 partitions (state.change.logger)
[2023-02-16 21:53:31,633] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-22 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-4 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-25 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-49 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-31 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:18,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-37 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-19 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-43 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,634] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-1 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-34 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-7 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-46 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-16 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-28 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition my-kafka-topic-1-1 state changed to (Leader:2,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:11,ZkVersion:15,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-13 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-10 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,635] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-40 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:5,ZkVersion:5,ControllerEpoch:8) after removing replica 1 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,642] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 3 for 19 partitions (state.change.logger)
[2023-02-16 21:53:31,652] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,652] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,652] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,652] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition my-kafka-topic-1-1 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:12,ZkVersion:16,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:15,ZkVersion:23,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,653] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,654] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,654] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,654] INFO [Controller id=3 epoch=8] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:10,ZkVersion:10,ControllerEpoch:8) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:53:31,654] INFO [Controller id=3 epoch=8] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 2 become-follower partitions (state.change.logger)
[2023-02-16 21:53:31,654] INFO [Controller id=3 epoch=8] Sending UpdateMetadata request to brokers HashSet(3) for 36 partitions (state.change.logger)
[2023-02-16 21:53:31,676] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-3 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,682] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-18 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,683] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition my-kafka-topic-1-2 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,683] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-39 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,684] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-9 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,684] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-24 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,685] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition my-kafka-topic-1-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,685] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-27 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,686] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-42 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,687] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-12 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,687] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-33 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,688] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-48 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,688] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-21 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,689] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-36 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,690] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-6 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,690] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-45 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,690] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-15 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,691] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-30 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,691] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 3 epoch 8 for partition __consumer_offsets-0 (last update controller epoch 7) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,696] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 3 epoch 8 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:53:31,708] INFO [Broker id=3] Finished LeaderAndIsr request in 66ms correlationId 1 from controller 3 for 19 partitions (state.change.logger)
[2023-02-16 21:53:31,713] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-22 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-22 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,716] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-25 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-25 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,716] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,716] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-37 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-37 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,717] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,717] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,717] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-4 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-4 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,717] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-7 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-7 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,718] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-46 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-46 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,718] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,718] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,718] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-49 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-49 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,719] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,719] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-16 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-16 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,719] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-28 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-28 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,720] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-31 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-31 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,720] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,720] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-19 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-19 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,720] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,721] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition my-kafka-topic-1-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,721] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-13 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-13 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,721] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,722] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-43 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-43 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,722] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,722] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,722] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,723] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-1 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-1 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,723] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 3 epoch 8 with correlation id 2 (state.change.logger)
[2023-02-16 21:53:31,723] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,723] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,723] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,723] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-34 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-34 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,724] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-10 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-10 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,724] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,724] ERROR [Controller id=3 epoch=8] Controller 3 epoch 8 failed to change state for partition __consumer_offsets-40 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-40 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:53:31,724] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 3 for 2 partitions (state.change.logger)
[2023-02-16 21:53:31,725] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 3 from controller 3 epoch 8 for partition my-kafka-topic-1-2 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,725] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 3 from controller 3 epoch 8 for partition my-kafka-topic-1-0 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:53:31,725] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 3 epoch 8 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-16 21:53:31,725] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,725] INFO [Broker id=3] Finished LeaderAndIsr request in 1ms correlationId 3 from controller 3 for 2 partitions (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=13, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=16, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=24) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=17, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Sending LeaderAndIsr request to broker 3 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:53:31,726] INFO [Controller id=3 epoch=8] Sending UpdateMetadata request to brokers HashSet(3) for 19 partitions (state.change.logger)
[2023-02-16 21:53:31,727] INFO [Broker id=3] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 3 epoch 8 with correlation id 4 (state.change.logger)
[2023-02-16 21:53:31,728] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 5 from controller 3 for 19 partitions (state.change.logger)
[2023-02-16 21:53:31,732] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 3 epoch 8 as part of the become-leader transition for 19 partitions (state.change.logger)
[2023-02-16 21:53:31,738] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,748] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,757] INFO [Broker id=3] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 16 from offset 719185 with partition epoch 24, high watermark 719185, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,765] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,770] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,775] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,781] INFO [Broker id=3] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 13 from offset 714397 with partition epoch 19, high watermark 714397, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,786] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,790] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,795] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,799] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,804] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,809] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,814] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,818] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,823] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,827] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,832] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 0 with partition epoch 17, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,837] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 17 from offset 1164112 with partition epoch 17, high watermark 1164112, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:53:31,867] INFO [Broker id=3] Finished LeaderAndIsr request in 139ms correlationId 5 from controller 3 for 19 partitions (state.change.logger)
[2023-02-16 21:53:31,869] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 3 epoch 8 with correlation id 6 (state.change.logger)
[2023-02-16 21:54:04,439] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-16 21:54:04,466] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:54:04,468] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 18 become-follower partitions (state.change.logger)
[2023-02-16 21:54:04,468] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2) for 36 partitions (state.change.logger)
[2023-02-16 21:54:04,502] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,503] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,503] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,503] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,503] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,503] INFO [Controller id=1 epoch=9] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:17,ZkVersion:25,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:14,ZkVersion:20,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,504] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,505] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,505] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,505] INFO [Controller id=1 epoch=9] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:18,ZkVersion:18,ControllerEpoch:9) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-16 21:54:04,507] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:54:04,508] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:54:04,508] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2) for 19 partitions (state.change.logger)
[2023-02-16 21:54:04,518] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:54:04,536] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:54:04,555] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-37 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,562] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-7 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,565] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-22 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,566] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my-kafka-topic-1-0 (last update controller epoch 8) but cannot become follower since the new leader 3 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,573] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-10 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,574] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-31 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,574] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-35 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,574] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-46 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,575] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-1 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,575] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-16 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,576] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-19 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,576] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-34 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,577] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-4 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,577] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-25 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,578] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my-kafka-topic-1-1 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,578] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-40 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,579] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my-kafka-topic-1-2 (last update controller epoch 8) but cannot become follower since the new leader 3 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,579] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-43 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,580] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-13 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,581] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-5 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,581] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,583] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,581] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-28 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,583] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,583] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,583] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,583] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,584] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,584] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,584] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,584] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,585] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,585] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,585] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,585] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,586] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,586] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,586] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,587] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-20 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,587] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,587] ERROR [Controller id=1 epoch=9] Controller 1 epoch 9 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processReelect(KafkaController.scala:2531)
	at kafka.controller.KafkaController.process(KafkaController.scala:2576)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-16 21:54:04,588] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-41 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,589] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-29 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,589] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-44 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,589] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-22 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,589] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-25 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,589] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,589] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-37 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,589] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,589] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,589] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-49 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,589] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-4 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-7 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-46 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-49 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-16 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-28 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-31 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-19 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition my-kafka-topic-1-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=13, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=17) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-13 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-43 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-1 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-34 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-10 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=11) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-40 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=6) (state.change.logger)
[2023-02-16 21:54:04,590] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 1 with 17 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:54:04,591] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:54:04,591] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2) for 34 partitions (state.change.logger)
[2023-02-16 21:54:04,592] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-14 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,594] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 9 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:54:04,595] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-2 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,597] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-23 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,598] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-38 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,598] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my-kafka-topic-1-1 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,599] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-8 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,600] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-11 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,605] INFO [Broker id=1] Finished LeaderAndIsr request in 89ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:54:04,605] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-26 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,606] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-47 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,607] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-17 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,607] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-32 (last update controller epoch 8) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,610] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 9 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:54:04,619] INFO [Broker id=1] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-02-16 21:54:04,621] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:54:04,621] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 9 for partition my-kafka-topic-1-0 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,622] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 9 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-16 21:54:04,622] INFO [Broker id=1] Finished LeaderAndIsr request in 1ms correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:54:04,625] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-02-16 21:54:04,625] INFO [Broker id=2] Finished LeaderAndIsr request in 89ms correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:54:04,627] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:54:04,632] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 9 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:54:04,636] INFO [Broker id=2] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-02-16 21:54:04,638] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:54:04,638] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 9 for partition my-kafka-topic-1-2 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:54:04,638] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 9 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-16 21:54:04,639] INFO [Broker id=2] Finished LeaderAndIsr request in 1ms correlationId 3 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:54:04,639] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,641] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-02-16 21:54:04,643] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:54:04,646] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 9 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-16 21:54:04,650] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,651] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,656] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,661] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,661] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,667] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,670] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,672] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,677] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,677] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,682] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,684] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,687] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,689] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,691] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,693] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,696] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,697] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,700] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,702] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,705] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,709] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,710] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,715] INFO [Broker id=2] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 13 from offset 715138 with partition epoch 17, high watermark 715138, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,716] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,721] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,722] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,725] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 6 from offset 0 with partition epoch 6, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,727] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,730] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,731] INFO [Broker id=1] Follower my-kafka-topic-1-1 starts at leader epoch 13 from offset 715138 with partition epoch 17 and high watermark 715138. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,731] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 9 with correlation id 5 for 1 partitions (state.change.logger)
[2023-02-16 21:54:04,736] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,741] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,747] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 11 from offset 0 with partition epoch 11, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:54:04,818] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-02-16 21:54:04,850] INFO [Broker id=1] Finished LeaderAndIsr request in 223ms correlationId 5 from controller 1 for 18 partitions (state.change.logger)
[2023-02-16 21:54:04,851] INFO [Broker id=1] Add 34 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 6 (state.change.logger)
[2023-02-16 21:54:04,852] INFO [Broker id=2] Finished LeaderAndIsr request in 209ms correlationId 5 from controller 1 for 17 partitions (state.change.logger)
[2023-02-16 21:54:04,853] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 7 (state.change.logger)
[2023-02-16 21:54:04,854] INFO [Broker id=2] Add 34 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 6 (state.change.logger)
[2023-02-16 21:54:04,855] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 7 (state.change.logger)
[2023-02-16 21:57:41,072] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-16 21:57:41,073] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-16 21:57:41,077] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-16 21:57:41,077] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-16 21:57:41,077] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 9 (state.change.logger)
[2023-02-16 21:57:41,077] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 9 (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=18, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=26) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=21) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=19) (state.change.logger)
[2023-02-16 21:57:41,090] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 1 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:57:41,091] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-16 21:57:41,091] INFO [Controller id=1 epoch=9] Sending LeaderAndIsr request to broker 3 with 19 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-16 21:57:41,091] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-16 21:57:41,091] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 10 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:57:41,091] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 10 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:57:41,092] INFO [Broker id=1] Follower my-kafka-topic-1-0 starts at leader epoch 15 from offset 714397 with partition epoch 21 and high watermark 714397. Current leader is 3. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,093] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 9 with correlation id 10 for 1 partitions (state.change.logger)
[2023-02-16 21:57:41,094] INFO [Broker id=2] Follower my-kafka-topic-1-2 starts at leader epoch 18 from offset 719185 with partition epoch 26 and high watermark 719185. Current leader is 3. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,094] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 9 with correlation id 10 for 1 partitions (state.change.logger)
[2023-02-16 21:57:41,105] INFO [Broker id=1] Finished LeaderAndIsr request in 14ms correlationId 10 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:57:41,107] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 11 (state.change.logger)
[2023-02-16 21:57:41,126] INFO [Broker id=2] Finished LeaderAndIsr request in 35ms correlationId 10 from controller 1 for 1 partitions (state.change.logger)
[2023-02-16 21:57:41,127] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 11 (state.change.logger)
[2023-02-16 21:57:41,264] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 0 (state.change.logger)
[2023-02-16 21:57:41,281] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:57:41,305] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-3 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,387] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-18 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,403] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my-kafka-topic-1-2 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,416] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-39 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,430] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-9 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,444] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-24 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,457] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition my-kafka-topic-1-0 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,471] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-27 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,485] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-42 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,497] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-12 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,511] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-33 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,524] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-48 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,537] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-21 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,551] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-36 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,564] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-6 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,578] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-45 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,593] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-15 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,607] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-30 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,623] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 9 for partition __consumer_offsets-0 (last update controller epoch 9) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-16 21:57:41,639] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 9 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-16 21:57:41,645] INFO [Broker id=3] Finished LeaderAndIsr request in 366ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:57:41,650] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 2 (state.change.logger)
[2023-02-16 21:57:41,651] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:57:41,653] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 9 as part of the become-leader transition for 19 partitions (state.change.logger)
[2023-02-16 21:57:41,657] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,665] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,671] INFO [Broker id=3] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 18 from offset 0 with partition epoch 26, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,677] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,682] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,688] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,693] INFO [Broker id=3] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 15 from offset 0 with partition epoch 21, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,697] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,703] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,708] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,712] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,716] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,721] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,725] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,730] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,735] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,740] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,744] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,749] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 19 from offset 0 with partition epoch 19, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-16 21:57:41,782] INFO [Broker id=3] Finished LeaderAndIsr request in 130ms correlationId 3 from controller 1 for 19 partitions (state.change.logger)
[2023-02-16 21:57:41,783] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 4 (state.change.logger)
[2023-02-16 21:57:42,393] INFO [Controller id=1 epoch=9] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 2 partitions (state.change.logger)
[2023-02-16 21:57:42,395] INFO [Broker id=1] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 12 (state.change.logger)
[2023-02-16 21:57:42,395] INFO [Broker id=2] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 12 (state.change.logger)
[2023-02-16 21:57:42,395] INFO [Broker id=3] Add 2 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 9 with correlation id 5 (state.change.logger)
