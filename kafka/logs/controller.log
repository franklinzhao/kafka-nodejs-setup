[2023-02-14 17:15:47,241] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-14 17:15:47,267] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 1 and epoch zk version is now 1 (kafka.controller.KafkaController)
[2023-02-14 17:15:47,269] INFO [Controller id=1] Creating FeatureZNode at path: /feature with contents: FeatureZNode(2,Enabled,Map()) (kafka.controller.KafkaController)
[2023-02-14 17:15:47,291] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-14 17:15:47,294] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-14 17:15:47,297] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-14 17:15:47,299] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-14 17:15:47,314] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 25) (kafka.controller.KafkaController)
[2023-02-14 17:15:47,318] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-02-14 17:15:47,322] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-14 17:15:47,335] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-14 17:15:47,337] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-02-14 17:15:47,338] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-14 17:15:47,338] INFO [Controller id=1] Current list of topics in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-14 17:15:47,338] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-14 17:15:47,340] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-14 17:15:47,341] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2023-02-14 17:15:47,341] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-14 17:15:47,341] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2023-02-14 17:15:47,343] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-14 17:15:47,353] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-14 17:15:47,353] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-14 17:15:47,359] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-14 17:15:47,359] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap() (kafka.controller.ZkReplicaStateMachine)
[2023-02-14 17:15:47,359] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-14 17:15:47,360] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-14 17:15:47,365] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:15:47,367] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap() (kafka.controller.ZkPartitionStateMachine)
[2023-02-14 17:15:47,368] INFO [Controller id=1] Ready to serve as the new controller with epoch 1 (kafka.controller.KafkaController)
[2023-02-14 17:15:47,375] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-14 17:15:47,375] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-14 17:15:47,375] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-14 17:15:47,375] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-14 17:15:47,376] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-14 17:15:47,395] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-14 17:15:52,396] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:15:52,397] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:18:41,144] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-14 17:18:41,145] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-14 17:18:41,151] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-14 17:18:41,152] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-14 17:18:41,155] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-02-14 17:18:41,157] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:18:41,157] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 25, 2 -> 45) (kafka.controller.KafkaController)
[2023-02-14 17:18:41,181] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-14 17:18:41,195] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-14 17:19:29,952] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-14 17:19:29,952] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-14 17:19:29,959] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-14 17:19:29,959] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-14 17:19:29,960] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-14 17:19:29,961] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 25, 2 -> 45, 3 -> 61) (kafka.controller.KafkaController)
[2023-02-14 17:19:29,963] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:19:29,990] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-14 17:19:30,003] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-14 17:20:52,400] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:20:52,400] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:25:04,622] INFO [Controller id=1] New topics: [Set(my-kafka-topic-1)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(my-kafka-topic-1,Some(ZHtMpig4RJ6nGa8VZWDLUA),Map(my-kafka-topic-1-0 -> ReplicaAssignment(replicas=3,1, addingReplicas=, removingReplicas=), my-kafka-topic-1-1 -> ReplicaAssignment(replicas=1,2, addingReplicas=, removingReplicas=), my-kafka-topic-1-2 -> ReplicaAssignment(replicas=2,3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-02-14 17:25:04,622] INFO [Controller id=1] New partition creation callback for my-kafka-topic-1-0,my-kafka-topic-1-1,my-kafka-topic-1-2 (kafka.controller.KafkaController)
[2023-02-14 17:25:34,659] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:25:34,764] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:25:41,107] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-14 17:25:41,117] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=1). (kafka.controller.KafkaController)
[2023-02-14 17:25:52,400] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:25:52,400] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:25:52,402] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 17:25:52,403] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:25:52,403] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 17:25:52,403] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:25:52,403] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 17:25:52,403] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:26:04,781] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:26:04,897] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:26:34,912] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:26:35,025] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:27:05,036] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:27:05,153] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:27:35,166] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:27:35,286] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:28:05,295] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:28:05,415] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:28:35,425] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:28:35,540] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:29:05,550] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:29:05,667] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:29:35,676] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:29:35,784] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:30:05,790] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:30:05,907] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:30:35,915] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:30:36,034] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:30:52,413] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:30:52,413] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:30:52,414] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 17:30:52,414] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:30:52,414] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 17:30:52,414] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:30:52,414] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 17:30:52,414] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:31:03,573] DEBUG [Controller id=1] There is no producerId block yet (Zk path version 0), creating the first block (kafka.controller.KafkaController)
[2023-02-14 17:31:03,581] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=0, size=1000) by writing to Zk with path version 1 (kafka.controller.KafkaController)
[2023-02-14 17:31:06,048] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:31:06,164] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:31:36,176] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:31:36,289] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:32:06,303] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:32:06,422] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:32:07,007] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=2, firstProducerId=0, size=1000), Zk path version 1 (kafka.controller.KafkaController)
[2023-02-14 17:32:07,009] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000) by writing to Zk with path version 2 (kafka.controller.KafkaController)
[2023-02-14 17:32:36,429] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:32:36,539] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:33:06,543] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:33:06,659] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:33:36,670] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:33:36,786] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:34:06,796] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:34:06,915] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:34:36,927] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:34:37,045] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:35:07,050] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:35:07,157] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:35:37,172] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:35:37,281] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:35:52,411] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:35:52,411] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:35:52,411] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 17:35:52,411] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:35:52,411] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 17:35:52,411] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:35:52,411] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 17:35:52,411] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:36:07,294] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:36:07,411] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:36:37,423] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:36:37,540] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:37:07,551] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:37:07,670] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:37:37,674] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:37:37,785] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:38:07,790] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:38:07,908] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:38:37,920] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:38:38,027] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:39:08,045] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:39:08,164] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:39:38,174] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:39:38,291] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:40:08,303] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:40:08,420] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:40:38,431] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:40:38,548] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:40:52,409] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:40:52,410] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:40:52,410] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 17:40:52,410] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:40:52,410] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 17:40:52,410] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:40:52,410] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 17:40:52,410] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:41:08,555] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:41:08,660] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:41:38,670] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:41:38,792] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:42:08,798] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:42:08,916] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:42:38,927] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:42:39,044] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:43:09,055] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:43:09,175] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:43:39,183] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:43:39,303] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:44:09,311] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:44:09,428] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:44:39,438] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:44:39,560] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:45:09,567] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:45:09,686] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:45:39,695] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:45:39,809] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:45:52,407] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:45:52,407] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:45:52,407] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 17:45:52,407] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:45:52,407] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 17:45:52,407] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:45:52,407] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 17:45:52,407] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:46:09,824] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:46:09,939] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:46:39,954] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:46:40,071] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:47:10,079] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:47:10,192] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:47:40,207] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:47:40,325] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:48:10,335] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:48:10,456] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:48:40,464] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:48:40,584] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:49:10,590] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:49:10,711] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:49:40,720] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:49:40,836] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:50:10,840] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:50:10,949] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:50:40,961] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:50:41,070] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:50:52,410] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:50:52,410] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:50:52,410] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 17:50:52,410] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:50:52,410] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 17:50:52,410] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:50:52,410] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 17:50:52,410] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:51:11,087] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:51:11,202] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:51:41,215] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:51:41,332] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:52:11,344] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:52:11,458] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:52:41,470] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:52:41,588] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:53:11,599] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:53:11,716] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:53:41,727] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:53:41,845] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:54:11,853] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:54:11,969] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:54:41,984] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:54:42,097] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:55:12,103] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:55:12,214] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:55:42,224] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:55:42,340] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:55:52,418] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 17:55:52,418] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 17:55:52,418] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 17:55:52,419] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:55:52,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 17:55:52,419] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:55:52,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 17:55:52,419] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 17:56:12,350] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:56:12,468] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:56:42,477] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:56:42,596] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:57:12,607] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:57:12,727] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:57:42,731] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:57:42,844] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:58:12,862] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:58:12,981] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:58:42,991] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:58:43,109] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:59:13,118] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:59:13,240] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 17:59:43,248] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 17:59:43,368] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:00:13,375] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:00:13,493] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:00:43,503] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:00:43,620] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:00:52,416] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:00:52,416] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:00:52,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:00:52,416] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:00:52,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:00:52,416] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:00:52,416] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:00:52,416] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:01:13,632] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:01:13,748] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:01:43,764] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:01:43,877] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:02:13,887] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:02:14,005] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:02:44,012] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:02:44,115] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:03:14,127] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:03:14,246] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:03:44,255] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:03:44,372] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:04:14,378] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:04:14,488] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:04:44,495] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:04:44,615] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:05:14,622] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:05:14,731] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:05:44,734] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:05:44,847] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:05:52,426] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:05:52,426] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:05:52,427] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:05:52,427] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:05:52,427] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:05:52,427] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:05:52,427] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:05:52,427] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:06:14,860] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:06:14,979] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:06:44,991] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:06:45,111] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:07:15,128] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:07:15,254] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:07:45,262] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:07:45,380] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:08:15,391] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:08:15,512] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:08:45,518] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:08:45,636] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:09:15,648] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:09:15,765] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:09:45,775] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:09:45,892] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:10:15,903] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:10:16,024] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:10:46,031] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:10:46,149] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:10:52,428] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:10:52,428] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:10:52,428] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:10:52,428] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:10:52,428] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:10:52,428] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:10:52,428] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:10:52,428] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:11:16,158] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:11:16,278] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:11:46,288] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:11:46,404] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:12:16,416] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:12:16,534] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:12:46,542] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:12:46,658] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:13:16,672] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:13:16,790] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:13:46,800] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:13:46,917] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:14:16,928] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:14:17,048] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:14:47,056] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:14:47,174] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:15:17,184] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:15:17,304] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:15:47,313] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:15:47,433] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:15:52,426] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:15:52,426] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:15:52,426] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:15:52,427] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:15:52,427] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:15:52,427] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:15:52,427] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:15:52,427] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:16:17,439] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:16:17,558] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:16:47,568] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:16:47,687] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:17:17,695] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:17:17,813] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:17:47,823] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:17:47,940] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:18:17,953] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:18:18,074] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:18:48,080] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:18:48,198] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:19:18,207] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:19:18,328] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:19:48,336] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:19:48,457] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:20:18,466] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:20:18,576] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:20:48,584] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:20:48,696] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:20:52,431] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:20:52,431] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:20:52,432] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:20:52,432] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:20:52,432] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:20:52,432] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:20:52,432] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:20:52,432] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:21:18,703] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:21:18,816] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:21:48,832] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:21:48,951] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:22:18,960] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:22:19,079] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:22:49,088] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:22:49,208] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:23:19,217] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:23:19,338] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:23:49,341] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:23:49,465] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:24:19,472] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:24:19,589] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:24:49,601] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:24:49,721] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:25:19,729] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:25:19,847] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:25:49,854] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:25:49,974] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:25:52,438] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:25:52,438] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:25:52,438] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:25:52,438] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:25:52,438] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:25:52,438] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:25:52,438] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:25:52,438] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:26:19,986] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:26:20,101] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:26:50,114] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:26:50,230] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:27:20,240] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:27:20,359] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:27:50,369] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:27:50,487] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:28:20,495] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:28:20,619] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:28:50,625] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:28:50,746] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:29:20,754] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:29:20,870] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:29:50,881] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:29:51,001] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:30:21,010] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:30:21,128] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:30:51,138] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:30:51,257] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:30:52,435] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:30:52,435] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:30:52,435] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:30:52,436] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:30:52,436] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:30:52,436] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:30:52,436] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:30:52,436] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:31:21,266] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:31:21,386] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:31:51,394] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:31:51,511] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:32:21,521] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:32:21,639] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:32:51,651] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:32:51,770] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:33:21,778] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:33:21,894] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:33:51,903] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:33:52,025] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:34:22,032] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:34:22,154] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:34:52,160] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:34:52,280] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:35:22,290] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:35:22,406] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:35:52,410] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:35:52,442] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:35:52,442] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:35:52,443] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:35:52,443] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:35:52,443] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:35:52,443] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:35:52,443] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:35:52,443] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:35:52,520] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:36:22,530] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:36:22,650] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:36:52,659] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:36:52,775] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:37:22,786] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:37:22,902] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:37:52,913] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:37:53,029] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:38:23,042] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:38:23,161] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:38:53,169] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:38:53,285] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:39:23,298] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:39:23,416] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:39:53,427] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:39:53,546] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:40:23,553] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:40:23,674] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:40:52,447] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:40:52,447] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:40:52,447] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:40:52,447] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:40:52,448] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:40:52,448] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:40:52,448] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:40:52,448] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:40:53,682] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:40:53,803] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:41:23,811] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:41:23,928] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:41:53,939] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:41:54,055] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:42:24,067] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:42:24,187] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:42:54,194] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:42:54,312] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:43:24,320] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:43:24,443] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:43:54,449] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:43:54,572] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:44:24,578] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:44:24,696] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:44:54,706] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:44:54,824] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:45:24,835] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:45:24,952] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:45:52,445] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:45:52,445] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:45:52,445] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:45:52,445] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:45:52,445] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:45:52,445] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:45:52,445] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:45:52,445] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:45:54,962] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:45:55,080] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:46:55,083] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:46:55,202] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:47:25,212] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:47:25,331] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:47:55,340] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:47:55,458] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:48:25,473] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:48:25,578] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:48:55,582] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:48:55,698] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:49:25,709] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:49:25,826] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:49:55,838] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:49:55,954] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:50:25,966] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:50:26,082] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:50:52,456] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:50:52,456] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:50:52,456] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:50:52,456] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:50:52,457] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:50:52,457] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:50:52,457] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:50:52,457] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:50:56,094] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:50:56,211] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:51:26,221] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:51:26,336] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:51:56,349] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:51:56,465] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:52:26,478] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:52:26,594] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:52:56,605] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:52:56,723] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:53:26,734] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:53:26,851] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:53:56,862] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:53:56,979] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:54:26,990] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:54:27,106] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:54:57,118] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:54:57,234] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:55:27,245] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:55:27,362] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:55:52,456] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 18:55:52,456] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 18:55:52,456] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 18:55:52,456] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:55:52,456] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 18:55:52,456] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:55:52,456] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 18:55:52,456] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 18:55:57,373] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:55:57,491] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:56:27,501] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:56:27,620] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:56:57,630] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:56:57,740] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:57:27,759] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:57:27,879] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:57:57,888] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:57:58,008] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:58:28,014] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:58:28,132] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:58:58,144] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:58:58,260] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:59:28,271] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:59:28,388] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 18:59:58,399] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 18:59:58,519] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:00:28,527] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:00:28,644] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:00:52,454] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:00:52,454] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:00:52,454] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:00:52,454] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:00:52,454] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:00:52,454] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:00:52,455] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:00:52,455] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:00:58,656] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:00:58,773] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:01:28,784] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:01:28,899] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:01:58,910] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:01:59,027] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:02:29,039] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:02:29,157] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:02:59,162] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:02:59,278] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:03:29,296] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:03:29,412] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:03:59,423] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:03:59,540] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:04:29,550] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:04:29,670] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:04:59,680] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:04:59,797] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:05:29,807] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:05:29,925] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:05:52,466] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:05:52,466] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:05:52,467] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:05:52,467] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:05:52,467] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:05:52,467] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:05:52,467] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:05:52,467] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:05:59,933] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:06:00,049] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:06:30,066] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:06:30,182] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:07:00,203] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:07:00,320] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:07:30,341] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:07:30,458] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:08:00,479] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:08:00,595] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:08:30,614] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:08:30,732] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:09:00,751] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:09:00,868] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:09:30,887] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:09:31,006] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:10:01,025] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:10:01,142] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:10:31,163] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:10:31,281] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:10:52,546] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:10:52,546] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:10:52,546] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:10:52,546] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:10:52,546] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:10:52,546] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:10:52,546] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:10:52,546] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:11:01,299] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:11:01,415] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:11:31,431] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:11:31,547] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:12:01,562] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:12:01,677] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:12:31,690] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:12:31,810] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:13:01,816] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:13:01,935] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:13:31,946] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:13:32,063] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:14:02,074] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:14:02,194] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:14:32,202] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:14:32,320] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:15:02,330] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:15:02,451] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:15:32,456] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:15:32,579] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:15:52,553] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:15:52,553] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:15:52,553] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:15:52,553] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:15:52,553] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:15:52,553] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:15:52,553] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:15:52,553] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:16:02,586] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:16:02,704] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:16:32,715] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:16:32,835] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:17:02,841] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:17:02,961] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:17:32,971] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:17:33,088] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:18:03,100] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:18:03,218] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:18:33,228] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:18:33,347] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:19:03,354] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:19:03,473] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:19:33,484] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:19:33,600] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:20:03,611] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:20:03,725] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:20:33,739] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:20:33,857] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:20:52,564] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:20:52,564] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:20:52,564] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:20:52,565] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:20:52,565] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:20:52,565] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:20:52,565] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:20:52,565] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:21:03,866] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:21:03,985] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:21:33,996] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:21:34,116] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:22:04,125] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:22:04,244] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:22:34,252] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:22:34,369] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:23:04,379] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:23:04,497] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:23:34,509] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:23:34,629] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:24:04,636] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:24:04,753] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:24:34,762] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:24:34,882] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:25:04,892] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:25:05,010] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:25:35,020] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:25:35,138] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:25:52,563] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:25:52,563] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:25:52,563] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:25:52,563] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:25:52,563] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:25:52,563] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:25:52,563] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:25:52,563] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:26:05,149] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:26:05,266] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:26:35,276] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:26:35,397] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:27:05,405] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:27:05,522] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:27:35,533] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:27:35,650] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:28:05,661] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:28:05,778] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:28:35,788] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:28:35,906] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:29:05,916] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:29:06,035] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:29:36,045] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:29:36,160] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:30:06,172] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:30:06,288] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:30:36,301] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:30:36,418] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:30:52,563] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:30:52,563] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:30:52,564] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:30:52,564] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:30:52,564] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:30:52,564] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:30:52,564] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:30:52,564] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:31:06,430] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:31:06,547] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:31:36,558] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:31:36,679] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:32:06,686] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:32:06,806] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:32:36,814] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:32:36,931] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:33:06,942] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:33:07,062] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:33:37,070] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:33:37,188] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:34:07,194] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:34:07,298] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:34:37,307] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:34:37,429] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:35:07,438] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:35:07,554] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:35:37,565] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:35:37,685] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:35:52,578] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:35:52,578] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:35:52,578] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:35:52,578] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:35:52,578] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:35:52,578] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:35:52,578] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:35:52,578] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:36:07,691] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:36:07,811] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:36:37,822] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:36:37,940] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:37:07,949] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:37:08,067] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:37:38,077] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:37:38,195] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:38:08,211] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:38:08,321] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:38:38,325] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:38:38,436] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:39:08,443] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:39:08,546] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:39:38,556] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:39:38,674] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:40:08,684] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:40:08,800] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:40:38,812] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:40:38,926] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:40:52,585] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:40:52,585] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:40:52,585] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:40:52,585] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:40:52,585] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:40:52,585] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:40:52,585] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:40:52,585] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:41:08,941] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:41:09,059] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:41:39,066] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:41:39,187] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:42:09,194] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:42:09,302] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:42:39,309] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:42:39,421] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:43:09,437] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:43:09,552] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:43:39,566] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:43:39,683] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:44:09,693] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:44:09,812] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:44:39,821] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:44:39,939] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:45:09,950] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:45:10,067] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:45:40,078] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:45:40,199] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:45:52,590] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:45:52,590] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:45:52,590] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:45:52,590] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:45:52,590] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:45:52,590] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:45:52,590] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:45:52,590] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:46:10,206] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:46:10,321] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:46:40,335] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:46:40,450] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:47:10,461] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:47:10,582] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:47:40,589] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:47:40,708] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:48:10,717] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:48:10,836] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:48:40,847] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:48:40,964] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:49:10,971] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:49:11,075] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:49:41,083] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:49:41,187] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:50:11,195] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:50:11,315] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:50:41,331] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:50:41,437] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:50:52,588] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:50:52,588] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:50:52,588] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:50:52,588] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:50:52,588] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:50:52,588] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:50:52,588] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:50:52,588] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:51:11,454] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:51:11,573] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:51:41,581] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:51:41,699] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:52:11,710] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:52:11,828] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:52:41,838] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:52:41,958] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:53:11,966] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:53:12,084] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:53:42,094] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:53:42,211] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:54:12,223] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:54:12,337] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:54:42,351] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:54:42,465] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:55:12,478] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:55:12,595] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:55:42,606] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:55:42,723] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:55:52,586] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 19:55:52,586] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 19:55:52,586] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 19:55:52,586] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:55:52,586] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 19:55:52,586] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:55:52,586] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 19:55:52,586] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 19:56:12,734] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:56:12,852] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:56:42,860] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:56:42,965] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:57:12,972] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:57:13,084] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:58:13,098] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:58:13,209] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:58:43,225] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:58:43,341] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:59:13,351] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:59:13,466] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 19:59:43,478] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 19:59:43,596] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:00:13,609] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:00:13,726] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:00:43,738] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:00:43,854] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:00:52,584] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:00:52,584] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:00:52,584] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 20:00:52,584] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:00:52,584] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 20:00:52,584] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:00:52,584] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 20:00:52,584] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:01:13,863] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:01:13,983] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:01:43,991] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:01:44,110] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:02:14,121] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:02:14,239] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:02:44,248] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:02:44,367] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:03:14,377] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:03:14,495] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:03:44,506] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:03:44,624] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:04:14,634] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:04:14,751] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:04:44,761] WARN [RequestSendThread controllerId=1] Controller 1 epoch 1 fails to send request (type=LeaderAndIsRequest, controllerId=1, controllerEpoch=1, brokerEpoch=61, partitionStates=[LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=0, controllerEpoch=1, leader=3, leaderEpoch=0, isr=[3, 1], partitionEpoch=0, replicas=[3, 1], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0), LeaderAndIsrPartitionState(topicName='my-kafka-topic-1', partitionIndex=2, controllerEpoch=1, leader=2, leaderEpoch=0, isr=[2, 3], partitionEpoch=0, replicas=[2, 3], addingReplicas=[], removingReplicas=[], isNew=true, leaderRecoveryState=0)], topicIds={my-kafka-topic-1=ZHtMpig4RJ6nGa8VZWDLUA}, liveLeaders=(host.docker.internal:9093 (id: 3 rack: null), host.docker.internal:9092 (id: 2 rack: null))) to broker host.docker.internal:9093 (id: 3 rack: null). Reconnecting to broker. (kafka.controller.RequestSendThread)
java.io.IOException: Connection to 3 was disconnected before the response was read
	at org.apache.kafka.clients.NetworkClientUtils.sendAndReceive(NetworkClientUtils.java:99)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:252)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:04:46,930] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:04:49,094] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:04:51,260] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:04:53,423] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:04:55,577] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:04:57,744] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:04:59,910] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:02,058] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:04,225] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:06,392] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:08,556] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:10,724] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:12,858] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:15,006] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:17,173] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:19,319] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:21,473] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:23,621] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:25,788] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:27,935] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:30,071] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:32,238] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:34,403] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:36,570] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:38,734] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:40,885] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:43,033] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:45,184] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:47,335] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:49,482] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:51,666] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:52,599] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:05:52,599] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:05:52,599] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 20:05:52,599] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:05:52,599] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 20:05:52,599] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:05:52,599] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 20:05:52,599] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:05:53,816] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:55,965] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:05:58,131] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:00,279] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:02,449] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:04,612] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:06,781] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:08,931] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:11,076] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:13,229] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:15,396] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:17,545] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:19,708] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:21,862] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:24,027] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:26,194] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:28,345] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:30,510] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:32,643] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:34,808] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:36,944] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:39,093] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:41,242] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:43,408] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:45,541] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:47,708] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:49,876] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:52,040] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:54,190] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:56,341] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:06:58,507] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:00,657] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:02,806] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:04,972] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:07,125] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:09,289] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:11,437] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:13,589] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:15,738] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:17,888] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:20,037] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:22,170] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:24,318] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:26,470] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:28,638] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:30,787] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:32,935] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:35,084] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:37,235] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:39,384] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:41,535] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:43,684] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:45,867] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:48,018] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:50,184] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:52,333] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:54,500] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:56,649] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:07:58,800] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:00,964] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:03,132] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:05,298] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:07,447] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:09,598] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:11,746] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:13,931] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:16,095] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:18,247] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:20,412] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:22,561] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:24,725] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:26,878] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:29,045] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:31,177] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:33,328] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:35,461] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:37,626] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:39,774] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:41,927] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:44,074] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:46,237] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:48,393] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:50,537] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:52,677] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:54,838] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:56,972] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:08:59,110] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:01,258] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:03,425] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:05,591] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:07,755] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:09,941] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:12,089] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:14,223] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:16,387] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:18,539] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:20,704] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:22,857] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:25,022] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:27,182] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:29,338] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:31,505] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:33,655] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:35,821] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:37,967] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:40,104] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:42,237] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:44,402] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:46,568] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:48,736] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:50,885] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:53,069] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:55,218] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:57,385] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:09:59,552] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:01,717] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:03,882] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:06,032] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:08,182] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:10,334] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:12,496] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:14,633] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:16,781] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:18,916] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:21,098] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:23,247] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:25,414] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:27,563] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:29,746] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:31,896] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:34,081] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:36,212] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:38,376] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:40,529] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:42,678] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:44,845] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:46,994] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:49,182] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:51,327] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:52,609] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:10:52,609] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:10:52,609] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 20:10:52,609] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:10:52,609] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 20:10:52,609] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:10:52,609] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 20:10:52,609] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:10:53,493] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:55,660] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:57,844] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:10:59,977] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:02,137] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:04,290] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:06,460] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:08,607] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:10,757] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:12,922] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:15,057] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:17,222] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:19,374] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:21,558] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:23,723] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:25,872] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:28,057] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:30,209] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:32,355] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:34,504] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:36,671] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:38,821] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:40,987] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:43,154] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:45,302] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:47,470] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:49,620] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:51,802] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:53,952] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:56,113] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:11:58,251] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:00,402] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:02,551] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:04,732] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:06,882] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:09,064] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:11,233] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:13,397] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:15,532] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:17,697] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:19,865] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:22,031] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:24,196] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:26,379] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:28,513] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:30,663] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:32,812] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:34,991] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:37,128] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:39,280] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:41,443] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:43,611] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:45,795] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:47,942] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:50,094] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:52,242] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:54,391] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:56,542] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:12:58,674] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:00,825] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:02,959] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:05,119] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:07,273] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:09,440] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:11,590] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:13,739] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:15,919] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:18,072] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:20,223] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:22,387] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:24,553] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:26,705] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:28,852] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:31,004] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:33,171] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:35,337] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:37,502] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:39,686] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:41,818] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:43,969] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:46,135] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:48,284] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:50,450] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:52,599] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:54,772] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:56,932] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:13:59,083] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:01,265] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:03,448] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:05,611] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:07,779] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:09,915] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:12,064] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:14,231] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:16,376] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:18,545] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:20,713] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:22,846] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:24,996] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:27,161] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:29,312] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:31,461] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:33,610] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:35,757] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:37,894] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:40,060] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:42,209] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:44,359] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:46,538] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:48,691] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:50,857] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:53,039] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:55,219] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:57,373] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:14:59,523] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:01,671] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:03,839] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:06,023] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:08,204] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:10,353] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:12,521] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:14,701] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:16,853] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:19,004] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:21,170] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:23,319] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:25,485] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:27,638] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:29,785] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:31,967] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:34,118] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:36,284] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:38,432] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:40,583] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:42,733] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:44,882] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:47,047] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:49,198] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:51,349] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:52,614] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:15:52,614] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:15:52,615] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 20:15:52,615] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:15:52,615] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 20:15:52,615] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:15:52,615] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 20:15:52,615] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:15:53,498] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:55,647] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:57,811] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:15:59,948] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:02,098] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:04,230] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:06,395] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:08,574] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:10,712] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:12,879] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:15,028] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:17,195] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:19,344] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:21,511] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:23,660] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:25,806] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:27,958] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:30,125] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:32,276] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:34,454] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:36,607] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:38,757] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:40,939] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:43,105] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:45,239] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:47,389] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:49,552] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:51,704] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:53,889] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:56,037] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:16:58,205] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:00,369] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:02,519] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:04,654] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:06,787] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:08,953] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:11,136] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:13,299] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:15,444] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:17,577] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:19,701] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:21,850] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:24,005] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:26,157] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:28,309] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:30,462] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:32,617] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:34,771] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:36,924] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:39,076] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:41,229] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:43,382] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:45,521] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:47,658] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:49,811] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:51,977] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:54,128] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:56,295] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:17:58,457] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:00,628] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:02,775] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:04,927] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:07,060] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:09,226] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:11,392] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:13,575] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:15,739] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:17,888] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:20,057] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:22,204] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:24,358] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:26,506] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:28,670] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:30,837] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:32,989] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:35,155] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:37,319] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:39,467] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:41,603] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:43,753] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:45,901] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:48,069] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:50,247] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:52,401] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:54,552] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:56,701] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:18:58,849] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:01,031] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:03,168] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:05,316] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:07,466] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:09,616] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:11,766] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:13,947] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:16,096] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:18,231] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:20,380] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:22,531] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:24,711] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:26,862] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:29,013] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:31,179] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:33,328] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:35,477] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:37,645] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:39,808] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:41,990] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:44,136] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:46,292] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:48,443] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:50,609] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:52,772] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:54,925] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:57,109] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:19:59,258] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:01,408] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:03,572] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:05,724] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:07,872] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:10,024] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:12,156] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:14,319] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:16,470] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:18,639] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:20,805] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:22,954] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:25,103] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:27,266] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:29,401] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:31,552] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:33,700] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:35,850] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:38,018] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:40,169] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:42,317] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:44,500] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:46,665] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:48,815] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:50,967] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:52,614] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:20:52,614] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:20:52,614] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 20:20:52,614] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:20:52,614] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 20:20:52,614] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:20:52,614] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 20:20:52,614] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:20:53,099] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:55,246] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:57,399] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:20:59,549] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:01,698] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:03,880] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:06,047] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:08,211] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:10,380] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:12,529] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:14,679] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:16,844] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:19,010] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:21,177] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:23,344] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:25,511] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:27,677] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:29,842] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:31,992] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:34,175] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:36,341] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:38,506] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:40,674] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:42,822] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:44,992] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:47,140] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:49,324] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:51,455] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:53,605] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:55,788] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:21:57,937] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:00,087] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:02,238] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:04,403] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:06,554] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:08,717] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:10,869] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:13,035] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:15,202] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:17,369] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:19,501] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:21,667] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:23,801] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:25,949] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:28,133] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:30,300] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:32,448] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:34,612] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:36,780] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:38,948] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:41,113] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:43,279] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:45,430] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:47,595] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:49,763] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:51,896] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:54,061] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:56,229] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:22:58,378] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:00,526] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:02,691] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:04,861] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:07,025] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:09,208] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:11,358] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:13,508] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:15,673] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:17,808] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:19,975] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:22,141] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:24,307] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:26,474] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:28,640] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:30,822] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:32,972] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:35,137] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:37,305] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:39,471] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:41,619] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:43,787] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:45,951] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:48,104] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:50,269] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:52,419] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:54,568] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:56,733] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:23:58,884] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:01,051] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:03,216] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:05,367] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:07,515] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:09,650] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:11,799] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:13,963] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:16,111] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:18,248] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:20,400] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:22,548] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:24,714] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:26,878] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:29,045] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:31,196] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:33,361] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:35,527] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:37,694] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:39,844] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:42,012] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:44,176] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:46,342] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:48,492] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:50,626] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:52,776] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:54,958] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:57,124] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:24:59,257] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:01,408] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:03,573] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:05,740] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:07,905] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:10,055] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:12,222] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:14,402] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:16,554] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:18,719] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:20,888] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:23,054] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:25,203] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:27,368] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:29,535] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:31,700] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:33,852] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:35,985] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:38,167] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:40,319] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:42,482] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:44,650] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:46,795] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:48,932] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:51,098] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:52,614] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:25:52,614] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:25:52,614] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2023-02-14 20:25:52,614] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:25:52,614] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 Map() (kafka.controller.KafkaController)
[2023-02-14 20:25:52,614] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:25:52,614] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 Map() (kafka.controller.KafkaController)
[2023-02-14 20:25:52,614] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:25:53,246] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:55,382] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:57,529] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:25:59,677] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:01,814] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:03,960] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:06,093] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:08,229] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:10,400] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:12,544] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:14,713] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:16,859] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:19,008] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:21,140] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:23,277] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:25,443] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:27,610] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:29,759] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:31,926] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:34,078] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:36,232] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:38,404] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:40,540] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:42,691] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:44,813] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:46,955] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:49,104] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:51,272] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:53,437] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:55,604] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:57,759] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:26:59,921] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:02,070] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:04,230] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:06,386] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:08,552] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:10,716] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:12,871] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:15,014] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:17,178] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:19,307] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:21,447] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:23,597] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:25,719] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:27,847] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:29,998] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:32,159] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:34,308] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:36,464] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:38,612] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:40,779] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:42,943] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:45,108] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:47,253] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:49,389] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:51,550] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:53,689] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:55,827] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:27:57,966] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:00,117] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:02,272] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:04,419] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:06,571] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:08,720] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:10,867] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:12,996] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:15,137] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:17,269] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:19,405] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:21,539] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:23,671] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:25,819] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:27,971] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:30,101] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:32,251] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:34,400] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:36,554] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:38,698] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:40,836] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:42,968] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:45,120] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:47,283] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:49,429] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:51,564] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:53,730] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:55,881] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:28:58,010] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:00,161] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:02,315] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:04,464] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:06,610] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:08,746] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:10,896] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:13,047] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:15,192] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:17,327] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:19,495] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:21,660] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:23,807] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:25,944] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:28,077] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:30,213] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:32,354] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:34,500] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:36,654] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:38,793] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:40,957] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:43,092] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:45,233] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:47,374] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:49,520] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:51,671] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:53,801] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:55,940] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:29:58,073] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:00,221] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:02,369] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:04,537] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:06,671] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:08,831] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:10,974] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:13,127] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:15,281] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:17,415] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:19,550] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:21,665] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:22,543] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(q2Ilz05dR6qgB0d46xMGWA),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2023-02-14 20:30:22,543] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2023-02-14 20:30:22,605] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:30:22,607] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:30:23,797] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:25,937] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:28,081] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:30,217] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:32,380] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:34,513] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:36,646] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:38,832] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:41,010] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:43,146] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:45,314] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:47,463] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:49,615] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:51,777] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:52,617] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:30:52,617] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:30:52,617] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:30:52,617] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:30:52,617] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:30:52,617] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:30:52,617] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:30:52,617] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:30:53,924] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:56,062] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:30:58,213] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:00,348] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:02,508] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:04,660] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:06,808] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:08,977] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:11,128] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:13,293] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:15,436] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:17,587] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:19,738] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:21,891] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:24,046] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:26,213] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:28,351] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:30,490] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:32,651] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:34,791] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:36,945] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:39,080] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:41,221] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:43,376] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:45,525] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:47,669] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:49,825] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:51,979] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:54,141] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:31:56,292] WARN [RequestSendThread controllerId=1] Controller 1's connection to broker host.docker.internal:9093 (id: 3 rack: null) was unsuccessful (kafka.controller.RequestSendThread)
java.io.IOException: Connection to host.docker.internal:9093 (id: 3 rack: null) failed.
	at org.apache.kafka.clients.NetworkClientUtils.awaitReady(NetworkClientUtils.java:70)
	at kafka.controller.RequestSendThread.brokerReady(ControllerChannelManager.scala:292)
	at kafka.controller.RequestSendThread.doWork(ControllerChannelManager.scala:245)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,356] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-14 20:33:57,374] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2023-02-14 20:33:57,376] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-14 20:33:57,379] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-14 20:33:57,382] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-14 20:33:57,384] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-14 20:33:57,397] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 197) (kafka.controller.KafkaController)
[2023-02-14 20:33:57,411] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-02-14 20:33:57,443] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-14 20:33:57,454] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-14 20:33:57,457] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-02-14 20:33:57,457] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-14 20:33:57,458] INFO [Controller id=1] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-14 20:33:57,458] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-14 20:33:57,462] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-14 20:33:57,463] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-14 20:33:57,463] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-14 20:33:57,463] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-14 20:33:57,465] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-14 20:33:57,473] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-14 20:33:57,482] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-14 20:33:57,485] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:33:57,501] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-14 20:33:57,564] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-14 20:33:57,565] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-14 20:33:57,568] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-14 20:33:57,609] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, my-kafka-topic-1-1 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, my-kafka-topic-1-2 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-14 20:33:57,609] INFO [Controller id=1] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2023-02-14 20:33:57,614] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-14 20:33:57,614] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-14 20:33:57,614] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-14 20:33:57,615] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-14 20:33:57,616] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-14 20:33:57,624] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-14 20:34:02,628] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:34:02,628] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:34:02,631] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:34:02,632] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:34:02,632] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), my-kafka-topic-1-2 -> List(2, 3), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-02-14 20:34:02,632] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-14 20:34:02,633] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-14 20:34:02,633] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-14 20:34:02,633] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-14 20:34:02,633] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-14 20:34:03,881] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-14 20:34:03,881] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-14 20:34:03,887] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-14 20:34:03,888] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-14 20:34:03,893] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:34:03,916] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-02-14 20:34:03,918] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 197, 2 -> 252) (kafka.controller.KafkaController)
[2023-02-14 20:34:03,929] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-14 20:34:03,939] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-14 20:34:04,204] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-1). (kafka.controller.KafkaController)
[2023-02-14 20:34:04,208] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-1 updated to LeaderAndIsr(leader=1, leaderEpoch=1, isr=List(1, 2), leaderRecoveryState=RECOVERED, partitionEpoch=2). (kafka.controller.KafkaController)
[2023-02-14 20:34:09,460] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-14 20:34:09,460] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-14 20:34:09,468] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-14 20:34:09,468] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-14 20:34:09,472] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-14 20:34:09,487] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-14 20:34:09,489] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 197, 2 -> 252, 3 -> 286) (kafka.controller.KafkaController)
[2023-02-14 20:34:09,507] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-14 20:34:09,518] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-14 20:34:10,085] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-0). (kafka.controller.KafkaController)
[2023-02-14 20:34:10,088] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-0 updated to LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1, 3), leaderRecoveryState=RECOVERED, partitionEpoch=3). (kafka.controller.KafkaController)
[2023-02-14 20:34:10,162] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-14 20:34:10,164] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2, 3), leaderRecoveryState=RECOVERED, partitionEpoch=4). (kafka.controller.KafkaController)
[2023-02-14 20:39:02,644] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:39:02,644] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:39:02,645] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:39:02,645] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:39:02,645] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:39:02,645] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:39:02,645] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 20:39:02,645] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 20:44:02,652] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:44:02,652] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:44:02,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:44:02,654] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:44:02,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:44:02,654] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:44:02,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 20:44:02,654] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 20:44:51,989] DEBUG [Controller id=1] Read current producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=1000, size=1000), Zk path version 2 (kafka.controller.KafkaController)
[2023-02-14 20:44:51,998] INFO [Controller id=1] Acquired new producerId block ProducerIdsBlock(assignedBrokerId=1, firstProducerId=2000, size=1000) by writing to Zk with path version 3 (kafka.controller.KafkaController)
[2023-02-14 20:49:02,652] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:49:02,652] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:49:02,653] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:49:02,653] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:49:02,653] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:49:02,653] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:49:02,654] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 20:49:02,654] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 20:54:02,665] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:54:02,665] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:54:02,666] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:54:02,666] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:54:02,666] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:54:02,667] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:54:02,667] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 20:54:02,667] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 20:59:02,664] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 20:59:02,664] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 20:59:02,665] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:59:02,665] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:59:02,665] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 20:59:02,665] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 20:59:02,665] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 20:59:02,666] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 21:04:02,665] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 21:04:02,670] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 21:04:02,670] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:04:02,671] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:04:02,671] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:04:02,671] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:04:02,671] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 21:04:02,671] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 21:09:02,679] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 21:09:02,679] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 21:09:02,680] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:09:02,680] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:09:02,680] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:09:02,680] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:09:02,680] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 21:09:02,680] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 21:14:02,678] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 21:14:02,678] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 21:14:02,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:14:02,679] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:14:02,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:14:02,679] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:14:02,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 21:14:02,679] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 21:19:02,678] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 21:19:02,678] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 21:19:02,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:19:02,679] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:19:02,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:19:02,679] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:19:02,679] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 21:19:02,679] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 21:24:02,688] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 21:24:02,688] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 21:24:02,688] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:24:02,688] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:24:02,688] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:24:02,688] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:24:02,688] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 21:24:02,688] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-14 21:29:02,708] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-14 21:29:02,708] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-14 21:29:02,708] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:29:02,708] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:29:02,708] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-14 21:29:02,708] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-14 21:29:02,708] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-14 21:29:02,708] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 17:51:34,751] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 17:51:34,773] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 3 and epoch zk version is now 3 (kafka.controller.KafkaController)
[2023-02-16 17:51:34,775] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-16 17:51:34,778] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-16 17:51:34,781] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-16 17:51:34,783] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-16 17:51:34,799] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 325) (kafka.controller.KafkaController)
[2023-02-16 17:51:34,811] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-02-16 17:51:34,841] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-16 17:51:34,852] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 17:51:34,853] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-02-16 17:51:34,853] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-16 17:51:34,853] INFO [Controller id=1] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-16 17:51:34,853] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-16 17:51:34,858] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-16 17:51:34,858] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-16 17:51:34,858] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-16 17:51:34,862] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-16 17:51:34,868] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-16 17:51:34,882] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 17:51:34,891] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 17:51:34,895] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 17:51:34,915] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 17:51:34,991] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 17:51:34,992] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 17:51:35,000] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 17:51:35,058] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, my-kafka-topic-1-1 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, my-kafka-topic-1-2 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 17:51:35,058] INFO [Controller id=1] Ready to serve as the new controller with epoch 3 (kafka.controller.KafkaController)
[2023-02-16 17:51:35,063] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 17:51:35,063] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 17:51:35,064] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-16 17:51:35,064] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-16 17:51:35,066] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-16 17:51:35,078] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-16 17:51:40,080] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 17:51:40,081] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 17:51:40,083] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 17:51:40,084] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 17:51:40,085] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), my-kafka-topic-1-2 -> List(2, 3), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-02-16 17:51:40,085] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 17:51:40,085] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 17:51:40,085] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 17:51:40,085] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 17:51:40,085] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 17:51:43,491] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-16 17:51:43,491] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-16 17:51:43,498] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 17:51:43,499] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-16 17:51:43,505] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 17:51:43,536] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-02-16 17:51:43,538] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 325, 2 -> 380) (kafka.controller.KafkaController)
[2023-02-16 17:51:43,538] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 17:51:43,550] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 17:51:43,863] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-1). (kafka.controller.KafkaController)
[2023-02-16 17:51:43,867] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-1 updated to LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1, 2), leaderRecoveryState=RECOVERED, partitionEpoch=4). (kafka.controller.KafkaController)
[2023-02-16 17:51:52,756] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-16 17:51:52,756] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 17:51:52,764] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-16 17:51:52,764] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 17:51:52,770] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 17:51:52,789] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 17:51:52,790] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 325, 2 -> 380, 3 -> 413) (kafka.controller.KafkaController)
[2023-02-16 17:51:52,818] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 17:51:52,831] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 17:51:53,108] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-0). (kafka.controller.KafkaController)
[2023-02-16 17:51:53,111] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-0 updated to LeaderAndIsr(leader=1, leaderEpoch=3, isr=List(1, 3), leaderRecoveryState=RECOVERED, partitionEpoch=5). (kafka.controller.KafkaController)
[2023-02-16 17:51:54,065] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-16 17:51:54,072] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=3, leaderEpoch=5, isr=List(3, 2), leaderRecoveryState=RECOVERED, partitionEpoch=8). (kafka.controller.KafkaController)
[2023-02-16 17:56:40,093] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 17:56:40,093] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 17:56:40,095] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 17:56:40,095] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 17:56:40,095] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 17:56:40,095] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 17:56:40,095] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 17:56:40,095] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:01:40,099] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:01:40,102] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:01:40,103] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:01:40,103] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:01:40,103] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:01:40,103] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:01:40,103] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:01:40,103] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:06:40,109] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:06:40,109] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:06:40,111] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:06:40,111] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:06:40,111] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:06:40,111] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:06:40,111] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:06:40,111] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:11:40,120] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:11:40,120] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:11:40,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:11:40,120] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:11:40,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:11:40,120] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:11:40,120] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:11:40,120] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:16:40,124] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:16:40,124] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:16:40,125] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:16:40,125] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:16:40,125] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:16:40,125] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:16:40,125] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:16:40,125] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:21:40,126] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:21:40,126] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:21:40,127] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:21:40,127] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:21:40,127] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:21:40,127] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:21:40,127] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:21:40,127] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:26:40,140] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:26:40,140] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:26:40,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:26:40,141] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:26:40,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:26:40,141] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:26:40,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:26:40,141] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:31:40,155] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:31:40,155] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:31:40,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:31:40,155] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:31:40,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:31:40,155] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:31:40,155] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:31:40,155] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:36:40,163] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:36:40,163] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:36:40,164] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:36:40,164] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:36:40,164] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:36:40,164] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:36:40,164] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:36:40,164] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:41:40,166] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:41:40,166] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:41:40,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:41:40,167] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:41:40,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:41:40,167] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:41:40,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:41:40,167] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:46:40,178] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:46:40,178] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:46:40,179] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:46:40,179] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:46:40,179] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:46:40,179] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:46:40,179] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:46:40,179] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:51:40,181] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:51:40,181] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:51:40,182] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:51:40,182] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:51:40,182] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:51:40,182] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:51:40,182] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:51:40,182] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 18:56:40,202] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 18:56:40,202] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 18:56:40,202] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 18:56:40,202] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 18:56:40,203] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 18:56:40,203] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 18:56:40,203] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 18:56:40,203] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:01:40,223] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:01:40,229] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:01:40,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:01:40,230] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:01:40,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:01:40,230] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:01:40,230] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:01:40,230] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:06:40,235] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:06:40,235] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:06:40,236] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:06:40,236] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:06:40,236] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:06:40,236] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:06:40,236] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:06:40,236] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:11:40,241] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:11:40,241] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:11:40,242] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:11:40,242] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:11:40,242] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:11:40,242] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:11:40,242] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:11:40,242] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:16:40,246] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:16:40,246] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:16:40,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:16:40,247] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:16:40,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:16:40,247] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:16:40,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:16:40,247] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:21:40,263] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:21:40,263] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:21:40,263] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:21:40,263] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:21:40,264] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:21:40,264] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:21:40,264] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:21:40,264] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:26:40,268] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:26:40,268] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:26:40,268] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:26:40,268] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:26:40,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:26:40,269] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:26:40,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:26:40,269] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:31:40,276] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:31:40,276] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:31:40,277] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:31:40,277] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:31:40,277] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:31:40,277] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:31:40,277] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:31:40,277] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:36:40,283] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:36:40,283] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:36:40,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:36:40,284] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:36:40,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:36:40,284] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:36:40,284] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:36:40,284] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:41:40,289] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:41:40,289] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:41:40,289] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:41:40,289] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:41:40,290] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:41:40,290] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:41:40,290] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:41:40,290] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:46:40,298] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:46:40,298] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:46:40,298] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:46:40,298] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:46:40,298] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:46:40,298] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:46:40,299] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:46:40,299] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:51:40,308] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:51:40,308] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:51:40,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:51:40,309] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:51:40,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:51:40,309] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:51:40,309] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:51:40,309] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 19:56:40,322] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 19:56:40,322] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 19:56:40,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 19:56:40,322] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 19:56:40,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 19:56:40,322] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 19:56:40,322] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 19:56:40,322] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:01:40,323] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:01:40,328] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:01:40,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:01:40,328] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:01:40,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:01:40,328] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:01:40,328] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:01:40,328] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:06:40,332] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:06:40,332] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:06:40,332] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:06:40,332] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:06:40,332] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:06:40,332] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:06:40,332] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:06:40,332] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:11:40,338] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:11:40,338] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:11:40,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:11:40,339] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:11:40,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:11:40,339] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:11:40,339] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:11:40,339] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:16:40,343] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:16:40,343] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:16:40,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:16:40,344] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:16:40,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:16:40,344] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:16:40,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:16:40,344] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:21:40,353] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:21:40,353] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:21:40,353] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:21:40,353] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:21:40,353] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:21:40,353] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:21:40,353] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:21:40,353] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:26:40,361] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:26:40,361] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:26:40,362] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:26:40,362] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:26:40,362] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:26:40,362] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:26:40,362] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:26:40,362] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:31:40,365] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:31:40,365] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:31:40,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:31:40,365] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:31:40,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:31:40,365] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:31:40,366] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:31:40,366] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:36:40,369] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:36:40,369] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:36:40,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:36:40,370] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:36:40,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:36:40,370] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:36:40,370] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:36:40,370] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:41:40,373] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:41:40,373] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:41:40,374] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:41:40,374] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:41:40,374] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:41:40,374] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:41:40,374] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:41:40,374] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:46:40,390] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:46:40,390] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:46:40,391] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:46:40,391] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:46:40,391] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:46:40,391] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:46:40,391] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:46:40,391] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:51:40,392] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:51:40,392] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:51:40,393] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:51:40,393] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:51:40,393] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:51:40,393] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:51:40,393] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:51:40,393] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:56:40,404] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 20:56:40,405] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 20:56:40,405] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 20:56:40,405] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 20:56:40,405] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 20:56:40,405] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 20:56:40,405] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 20:56:40,405] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 20:57:01,907] INFO [Controller id=1] Newly added brokers: , deleted brokers: 3, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-16 20:57:01,908] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-02-16 20:57:01,908] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-02-16 20:57:01,908] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-02-16 20:57:01,913] INFO [Controller id=1] Broker failure callback for 3 (kafka.controller.KafkaController)
[2023-02-16 20:57:01,947] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 20:57:01,947] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 20:57:01,950] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 20:57:01,950] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 325, 2 -> 380) (kafka.controller.KafkaController)
[2023-02-16 21:01:40,413] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:01:40,418] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:01:40,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:01:40,419] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:01:40,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:01:40,419] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:01:40,419] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:01:40,419] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:01:40,419] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:06:40,428] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:06:40,428] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:06:40,429] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:06:40,429] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:06:40,429] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:06:40,429] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:06:40,429] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:06:40,429] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:06:40,429] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:11:40,440] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:11:40,440] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:11:40,441] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:11:40,441] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:11:40,441] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:11:40,441] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:11:40,441] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:11:40,441] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:11:40,441] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:16:40,456] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:16:40,456] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:16:40,456] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:16:40,456] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:16:40,456] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:16:40,456] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:16:40,457] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:16:40,457] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:16:40,457] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:18:33,989] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:18:34,009] INFO [Controller id=2] 2 successfully elected as the controller. Epoch incremented to 4 and epoch zk version is now 4 (kafka.controller.KafkaController)
[2023-02-16 21:18:34,010] INFO [Controller id=2] Registering handlers (kafka.controller.KafkaController)
[2023-02-16 21:18:34,013] INFO [Controller id=2] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-16 21:18:34,015] INFO [Controller id=2] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-16 21:18:34,016] INFO [Controller id=2] Initializing controller context (kafka.controller.KafkaController)
[2023-02-16 21:18:34,029] INFO [Controller id=2] Initialized broker epochs cache: HashMap(2 -> 503) (kafka.controller.KafkaController)
[2023-02-16 21:18:34,043] DEBUG [Controller id=2] Register BrokerModifications handler for Set(2) (kafka.controller.KafkaController)
[2023-02-16 21:18:34,075] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:18:34,089] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:18:34,090] INFO [Controller id=2] Currently active brokers in the cluster: Set(2) (kafka.controller.KafkaController)
[2023-02-16 21:18:34,091] INFO [Controller id=2] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-16 21:18:34,092] INFO [Controller id=2] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-16 21:18:34,092] INFO [Controller id=2] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-16 21:18:34,096] INFO [Controller id=2] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-16 21:18:34,097] INFO [Controller id=2] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-16 21:18:34,097] INFO [Controller id=2] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-16 21:18:34,098] INFO [Topic Deletion Manager 2] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-16 21:18:34,099] INFO [Controller id=2] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-16 21:18:34,114] INFO [ReplicaStateMachine controllerId=2] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:18:34,120] INFO [ReplicaStateMachine controllerId=2] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:18:34,127] INFO [RequestSendThread controllerId=2] Controller 2 connected to host.docker.internal:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:18:34,143] INFO [ReplicaStateMachine controllerId=2] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:18:34,224] DEBUG [ReplicaStateMachine controllerId=2] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:18:34,224] INFO [PartitionStateMachine controllerId=2] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:18:34,228] INFO [PartitionStateMachine controllerId=2] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:18:34,298] DEBUG [PartitionStateMachine controllerId=2] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OfflinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, my-kafka-topic-1-1 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, my-kafka-topic-1-2 -> OnlinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:18:34,299] INFO [Controller id=2] Ready to serve as the new controller with epoch 4 (kafka.controller.KafkaController)
[2023-02-16 21:18:34,303] INFO [Controller id=2] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:18:34,303] INFO [Controller id=2] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:18:34,304] INFO [Controller id=2] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-16 21:18:34,304] INFO [Controller id=2] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-16 21:18:34,306] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-16 21:18:34,318] INFO [Controller id=2] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-16 21:18:39,334] INFO [Controller id=2] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:18:39,334] TRACE [Controller id=2] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:18:39,336] DEBUG [Controller id=2] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), my-kafka-topic-1-1 -> List(1, 2), __consumer_offsets-13 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)) (kafka.controller.KafkaController)
[2023-02-16 21:18:39,337] TRACE [Controller id=2] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:18:39,339] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:18:39,339] DEBUG [Controller id=2] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:18:39,339] TRACE [Controller id=2] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:18:39,339] DEBUG [Controller id=2] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:18:39,339] TRACE [Controller id=2] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:18:39,339] INFO [Controller id=2] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:18:40,722] INFO [Controller id=2] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 2,3 (kafka.controller.KafkaController)
[2023-02-16 21:18:40,723] DEBUG [Channel manager on controller 2]: Controller 2 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:18:40,728] INFO [RequestSendThread controllerId=2] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:18:40,729] INFO [Controller id=2] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:18:40,734] INFO [RequestSendThread controllerId=2] Controller 2 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:18:40,761] DEBUG [Controller id=2] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:18:40,763] INFO [Controller id=2] Updated broker epochs cache: HashMap(2 -> 503, 3 -> 543) (kafka.controller.KafkaController)
[2023-02-16 21:18:40,773] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:18:40,785] DEBUG [Controller id=3] Broker 2 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:18:41,369] DEBUG [Controller id=2] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-16 21:18:41,374] DEBUG [Controller id=2] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2, 3), leaderRecoveryState=RECOVERED, partitionEpoch=10). (kafka.controller.KafkaController)
[2023-02-16 21:26:48,792] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:26:48,813] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 5 and epoch zk version is now 5 (kafka.controller.KafkaController)
[2023-02-16 21:26:48,814] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-16 21:26:48,818] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-16 21:26:48,821] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-16 21:26:48,824] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-16 21:26:48,836] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 579) (kafka.controller.KafkaController)
[2023-02-16 21:26:48,847] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-02-16 21:26:48,878] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:26:48,890] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:26:48,892] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-02-16 21:26:48,892] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-16 21:26:48,893] INFO [Controller id=1] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-16 21:26:48,893] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-16 21:26:48,897] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-16 21:26:48,898] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-16 21:26:48,898] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-16 21:26:48,898] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-16 21:26:48,899] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-16 21:26:48,908] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:26:48,939] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:26:48,941] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:26:48,960] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:26:49,031] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:26:49,031] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:26:49,034] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:26:49,107] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OnlinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, my-kafka-topic-1-1 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, my-kafka-topic-1-2 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:26:49,107] INFO [Controller id=1] Ready to serve as the new controller with epoch 5 (kafka.controller.KafkaController)
[2023-02-16 21:26:49,112] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:26:49,112] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:26:49,112] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-16 21:26:49,112] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-16 21:26:49,113] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-16 21:26:49,122] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-16 21:26:54,135] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:26:54,135] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:26:54,139] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 21:26:54,139] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:26:54,139] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), my-kafka-topic-1-2 -> List(2, 3), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-02-16 21:26:54,139] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:26:54,141] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:26:54,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:26:54,141] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:26:54,141] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:27:36,159] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-16 21:27:36,159] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:27:36,166] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:27:36,166] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-16 21:27:36,171] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:27:36,196] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-02-16 21:27:36,197] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 579, 2 -> 651) (kafka.controller.KafkaController)
[2023-02-16 21:27:36,198] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:27:36,209] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:27:37,427] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-1). (kafka.controller.KafkaController)
[2023-02-16 21:27:37,435] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-1 updated to LeaderAndIsr(leader=2, leaderEpoch=6, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=9). (kafka.controller.KafkaController)
[2023-02-16 21:28:14,282] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-16 21:28:14,282] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:28:14,291] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:28:14,291] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:28:14,295] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:28:14,311] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:28:14,312] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 579, 2 -> 651, 3 -> 685) (kafka.controller.KafkaController)
[2023-02-16 21:28:14,338] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:28:14,351] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:28:14,926] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-0). (kafka.controller.KafkaController)
[2023-02-16 21:28:14,934] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-0 updated to LeaderAndIsr(leader=1, leaderEpoch=6, isr=List(1, 3), leaderRecoveryState=RECOVERED, partitionEpoch=9). (kafka.controller.KafkaController)
[2023-02-16 21:28:15,602] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-16 21:28:15,609] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=3, leaderEpoch=9, isr=List(3, 2), leaderRecoveryState=RECOVERED, partitionEpoch=14). (kafka.controller.KafkaController)
[2023-02-16 21:28:46,917] INFO [Controller id=1] Newly added brokers: , deleted brokers: 3, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-16 21:28:46,918] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-02-16 21:28:46,918] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-02-16 21:28:46,918] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-02-16 21:28:46,921] INFO [Controller id=1] Broker failure callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:28:46,949] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:28:46,949] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 579, 2 -> 651) (kafka.controller.KafkaController)
[2023-02-16 21:31:54,150] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:31:54,150] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:31:54,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 21:31:54,151] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:31:54,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:31:54,151] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:31:54,151] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:31:54,151] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:31:54,151] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:32:55,260] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-16 21:32:55,261] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:32:55,267] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:32:55,267] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:32:55,271] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:32:55,281] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:32:55,282] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 579, 2 -> 651, 3 -> 741) (kafka.controller.KafkaController)
[2023-02-16 21:32:55,300] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:32:55,310] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:32:55,540] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-0). (kafka.controller.KafkaController)
[2023-02-16 21:32:55,546] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-0 updated to LeaderAndIsr(leader=1, leaderEpoch=7, isr=List(1, 3), leaderRecoveryState=RECOVERED, partitionEpoch=11). (kafka.controller.KafkaController)
[2023-02-16 21:32:55,548] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-16 21:32:55,551] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=2, leaderEpoch=10, isr=List(2, 3), leaderRecoveryState=RECOVERED, partitionEpoch=16). (kafka.controller.KafkaController)
[2023-02-16 21:33:25,926] INFO [Controller id=1] Newly added brokers: , deleted brokers: 3, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-16 21:33:25,927] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-02-16 21:33:25,927] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-02-16 21:33:25,927] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-02-16 21:33:25,929] INFO [Controller id=1] Broker failure callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:33:25,945] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:33:25,945] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 579, 2 -> 651) (kafka.controller.KafkaController)
[2023-02-16 21:36:54,166] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:36:54,166] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:36:54,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 21:36:54,167] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:36:54,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:36:54,167] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:36:54,167] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:36:54,167] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:36:54,167] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:36:58,589] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-16 21:36:58,589] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:36:58,596] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:36:58,596] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:36:58,601] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:36:58,609] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:36:58,609] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 579, 2 -> 651, 3 -> 796) (kafka.controller.KafkaController)
[2023-02-16 21:36:58,629] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:36:58,640] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:36:58,871] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-16 21:36:58,874] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=2, leaderEpoch=11, isr=List(2, 3), leaderRecoveryState=RECOVERED, partitionEpoch=18). (kafka.controller.KafkaController)
[2023-02-16 21:36:58,876] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-0). (kafka.controller.KafkaController)
[2023-02-16 21:36:58,878] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-0 updated to LeaderAndIsr(leader=1, leaderEpoch=8, isr=List(1, 3), leaderRecoveryState=RECOVERED, partitionEpoch=13). (kafka.controller.KafkaController)
[2023-02-16 21:37:28,914] INFO [Controller id=1] Newly added brokers: , deleted brokers: 3, bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-16 21:37:28,914] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2023-02-16 21:37:28,914] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2023-02-16 21:37:28,914] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2023-02-16 21:37:28,915] INFO [Controller id=1] Broker failure callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:37:28,931] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:37:28,931] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 579, 2 -> 651) (kafka.controller.KafkaController)
[2023-02-16 21:41:41,781] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-16 21:41:41,781] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:41:41,788] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:41:41,788] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:41:41,793] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:41:41,803] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:41:41,803] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 579, 2 -> 651, 3 -> 851) (kafka.controller.KafkaController)
[2023-02-16 21:41:41,822] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:41:41,832] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:41:42,155] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-16 21:41:42,157] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=2, leaderEpoch=12, isr=List(2, 3), leaderRecoveryState=RECOVERED, partitionEpoch=20). (kafka.controller.KafkaController)
[2023-02-16 21:41:42,159] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-0). (kafka.controller.KafkaController)
[2023-02-16 21:41:42,161] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-0 updated to LeaderAndIsr(leader=1, leaderEpoch=9, isr=List(1, 3), leaderRecoveryState=RECOVERED, partitionEpoch=15). (kafka.controller.KafkaController)
[2023-02-16 21:41:54,169] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:41:54,169] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:41:54,170] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 21:41:54,170] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:41:54,170] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:41:54,170] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:41:54,170] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(my-kafka-topic-1-0 -> List(3, 1)) (kafka.controller.KafkaController)
[2023-02-16 21:41:54,170] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:46:22,017] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:46:22,036] INFO [Controller id=3] 3 successfully elected as the controller. Epoch incremented to 6 and epoch zk version is now 6 (kafka.controller.KafkaController)
[2023-02-16 21:46:22,038] INFO [Controller id=3] Registering handlers (kafka.controller.KafkaController)
[2023-02-16 21:46:22,042] INFO [Controller id=3] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-16 21:46:22,045] INFO [Controller id=3] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-16 21:46:22,047] INFO [Controller id=3] Initializing controller context (kafka.controller.KafkaController)
[2023-02-16 21:46:22,060] INFO [Controller id=3] Initialized broker epochs cache: HashMap(3 -> 889) (kafka.controller.KafkaController)
[2023-02-16 21:46:22,078] DEBUG [Controller id=3] Register BrokerModifications handler for Set(3) (kafka.controller.KafkaController)
[2023-02-16 21:46:22,113] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:46:22,123] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:46:22,125] INFO [Controller id=3] Currently active brokers in the cluster: Set(3) (kafka.controller.KafkaController)
[2023-02-16 21:46:22,125] INFO [Controller id=3] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-16 21:46:22,125] INFO [Controller id=3] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-16 21:46:22,126] INFO [Controller id=3] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-16 21:46:22,130] INFO [Controller id=3] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-16 21:46:22,130] INFO [Controller id=3] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-16 21:46:22,130] INFO [Controller id=3] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-16 21:46:22,131] INFO [Topic Deletion Manager 3] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-16 21:46:22,132] INFO [Controller id=3] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-16 21:46:22,142] INFO [ReplicaStateMachine controllerId=3] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:46:22,151] INFO [ReplicaStateMachine controllerId=3] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:46:22,155] INFO [RequestSendThread controllerId=3] Controller 3 connected to host.docker.internal:9093 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:46:22,170] INFO [ReplicaStateMachine controllerId=3] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:46:22,231] DEBUG [ReplicaStateMachine controllerId=3] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:46:22,232] INFO [PartitionStateMachine controllerId=3] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:46:22,235] INFO [PartitionStateMachine controllerId=3] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:46:22,281] DEBUG [PartitionStateMachine controllerId=3] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OnlinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, my-kafka-topic-1-1 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, my-kafka-topic-1-2 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:46:22,282] INFO [Controller id=3] Ready to serve as the new controller with epoch 6 (kafka.controller.KafkaController)
[2023-02-16 21:46:22,285] INFO [Controller id=3] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:46:22,285] INFO [Controller id=3] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:46:22,286] INFO [Controller id=3] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-16 21:46:22,286] INFO [Controller id=3] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-16 21:46:22,287] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-16 21:46:22,296] INFO [Controller id=3] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-16 21:46:27,310] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:46:27,310] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:46:27,313] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), my-kafka-topic-1-1 -> List(1, 2), __consumer_offsets-13 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)) (kafka.controller.KafkaController)
[2023-02-16 21:46:27,313] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:46:27,314] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:46:27,314] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), my-kafka-topic-1-2 -> List(2, 3), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-02-16 21:46:27,314] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:46:27,314] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:46:27,315] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:46:27,315] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:47:06,088] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:47:06,107] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 7 and epoch zk version is now 7 (kafka.controller.KafkaController)
[2023-02-16 21:47:06,108] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-16 21:47:06,110] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-16 21:47:06,112] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-16 21:47:06,115] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-16 21:47:06,130] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 962) (kafka.controller.KafkaController)
[2023-02-16 21:47:06,140] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-02-16 21:47:06,175] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:47:06,188] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:47:06,190] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-02-16 21:47:06,190] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-16 21:47:06,191] INFO [Controller id=1] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-16 21:47:06,191] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-16 21:47:06,195] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-16 21:47:06,195] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-16 21:47:06,195] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-16 21:47:06,196] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-16 21:47:06,197] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-16 21:47:06,205] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:47:06,215] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:47:06,219] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9091 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:47:06,235] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:47:06,297] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:47:06,297] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:47:06,300] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:47:06,361] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OfflinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, my-kafka-topic-1-1 -> OfflinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, my-kafka-topic-1-2 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:47:06,362] INFO [Controller id=1] Ready to serve as the new controller with epoch 7 (kafka.controller.KafkaController)
[2023-02-16 21:47:06,366] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:47:06,366] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:47:06,366] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-16 21:47:06,366] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-16 21:47:06,367] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-16 21:47:06,376] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-16 21:47:11,384] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:47:11,384] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:47:11,387] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 21:47:11,388] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:47:11,388] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), my-kafka-topic-1-2 -> List(2, 3), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-02-16 21:47:11,388] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:47:11,389] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:47:11,389] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:47:11,389] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:47:11,390] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:47:12,629] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-16 21:47:12,629] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:47:12,636] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:47:12,637] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-16 21:47:12,641] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9092 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:47:12,669] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-02-16 21:47:12,670] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 962, 2 -> 1018) (kafka.controller.KafkaController)
[2023-02-16 21:47:12,671] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:47:12,683] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:47:13,915] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-1). (kafka.controller.KafkaController)
[2023-02-16 21:47:13,918] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-1 updated to LeaderAndIsr(leader=2, leaderEpoch=10, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=14). (kafka.controller.KafkaController)
[2023-02-16 21:52:11,396] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:52:11,396] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:52:11,397] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 21:52:11,397] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:52:11,398] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 21:52:11,398] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 21:52:11,398] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:52:11,398] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:52:11,398] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:53:31,446] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:53:31,465] INFO [Controller id=3] 3 successfully elected as the controller. Epoch incremented to 8 and epoch zk version is now 8 (kafka.controller.KafkaController)
[2023-02-16 21:53:31,466] INFO [Controller id=3] Registering handlers (kafka.controller.KafkaController)
[2023-02-16 21:53:31,469] INFO [Controller id=3] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-16 21:53:31,472] INFO [Controller id=3] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-16 21:53:31,474] INFO [Controller id=3] Initializing controller context (kafka.controller.KafkaController)
[2023-02-16 21:53:31,481] INFO [Controller id=3] Initialized broker epochs cache: HashMap(3 -> 1054) (kafka.controller.KafkaController)
[2023-02-16 21:53:31,492] DEBUG [Controller id=3] Register BrokerModifications handler for Set(3) (kafka.controller.KafkaController)
[2023-02-16 21:53:31,538] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:53:31,551] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:53:31,552] INFO [Controller id=3] Currently active brokers in the cluster: Set(3) (kafka.controller.KafkaController)
[2023-02-16 21:53:31,553] INFO [Controller id=3] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-16 21:53:31,553] INFO [Controller id=3] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-16 21:53:31,553] INFO [Controller id=3] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-16 21:53:31,558] INFO [Controller id=3] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-16 21:53:31,558] INFO [Controller id=3] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-16 21:53:31,559] INFO [Controller id=3] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-16 21:53:31,559] INFO [Topic Deletion Manager 3] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-16 21:53:31,560] INFO [Controller id=3] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-16 21:53:31,567] INFO [ReplicaStateMachine controllerId=3] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:53:31,574] INFO [ReplicaStateMachine controllerId=3] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:53:31,579] INFO [RequestSendThread controllerId=3] Controller 3 connected to host.docker.internal:9099 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:53:31,596] INFO [ReplicaStateMachine controllerId=3] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:53:31,655] DEBUG [ReplicaStateMachine controllerId=3] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:53:31,655] INFO [PartitionStateMachine controllerId=3] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:53:31,661] INFO [PartitionStateMachine controllerId=3] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:53:31,727] DEBUG [PartitionStateMachine controllerId=3] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OnlinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, my-kafka-topic-1-1 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, my-kafka-topic-1-2 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:53:31,727] INFO [Controller id=3] Ready to serve as the new controller with epoch 8 (kafka.controller.KafkaController)
[2023-02-16 21:53:31,733] INFO [Controller id=3] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:53:31,733] INFO [Controller id=3] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:53:31,734] INFO [Controller id=3] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-16 21:53:31,734] INFO [Controller id=3] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-16 21:53:31,735] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-16 21:53:31,746] INFO [Controller id=3] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-16 21:53:36,755] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:53:36,755] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:53:36,758] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), my-kafka-topic-1-1 -> List(1, 2), __consumer_offsets-13 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)) (kafka.controller.KafkaController)
[2023-02-16 21:53:36,758] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:53:36,760] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:53:36,760] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), my-kafka-topic-1-2 -> List(2, 3), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-02-16 21:53:36,760] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:53:36,760] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:53:36,760] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:53:36,760] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 21:53:56,871] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:53:56,881] DEBUG [Controller id=2] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:54:02,393] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:54:02,405] DEBUG [Controller id=1] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:54:04,381] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 9 and epoch zk version is now 9 (kafka.controller.KafkaController)
[2023-02-16 21:54:04,383] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-16 21:54:04,385] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-16 21:54:04,385] DEBUG [Controller id=2] Broker 1 was elected as controller instead of broker 2 (kafka.controller.KafkaController)
org.apache.kafka.common.errors.ControllerMovedException: Controller moved to another broker. Aborting controller startup procedure
[2023-02-16 21:54:04,386] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-16 21:54:04,387] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-16 21:54:04,393] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 1142, 2 -> 1141) (kafka.controller.KafkaController)
[2023-02-16 21:54:04,399] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1, 2) (kafka.controller.KafkaController)
[2023-02-16 21:54:04,417] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:54:04,426] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:54:04,431] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:54:04,431] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:54:04,432] INFO [Controller id=1] Currently active brokers in the cluster: Set(1, 2) (kafka.controller.KafkaController)
[2023-02-16 21:54:04,432] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-16 21:54:04,432] INFO [Controller id=1] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-16 21:54:04,432] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-16 21:54:04,436] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-16 21:54:04,436] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-16 21:54:04,436] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-16 21:54:04,436] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-16 21:54:04,437] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-16 21:54:04,443] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:54:04,447] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:54:04,454] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9098 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:54:04,454] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9097 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:54:04,469] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:54:04,509] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OnlineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-16 21:54:04,509] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:54:04,517] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:54:04,591] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OfflinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OnlinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OnlinePartition, __consumer_offsets-5 -> OnlinePartition, __consumer_offsets-38 -> OnlinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OnlinePartition, my-kafka-topic-1-1 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OnlinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OnlinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OnlinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OnlinePartition, __consumer_offsets-44 -> OnlinePartition, my-kafka-topic-1-2 -> OfflinePartition, __consumer_offsets-23 -> OnlinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OnlinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OnlinePartition, __consumer_offsets-14 -> OnlinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OnlinePartition, __consumer_offsets-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-16 21:54:04,592] INFO [Controller id=1] Ready to serve as the new controller with epoch 9 (kafka.controller.KafkaController)
[2023-02-16 21:54:04,597] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:54:04,597] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-16 21:54:04,597] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-16 21:54:04,597] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-16 21:54:04,599] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-16 21:54:04,610] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-16 21:54:04,813] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-1). (kafka.controller.KafkaController)
[2023-02-16 21:54:04,817] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-1 updated to LeaderAndIsr(leader=2, leaderEpoch=13, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=18). (kafka.controller.KafkaController)
[2023-02-16 21:54:09,626] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:54:09,627] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:54:09,630] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 21:54:09,630] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:54:09,631] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 21:54:09,631] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 21:54:09,631] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-16 21:54:09,631] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-16 21:54:09,632] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-16 21:57:41,064] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-16 21:57:41,064] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-16 21:57:41,071] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-16 21:57:41,072] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-16 21:57:41,077] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9099 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-16 21:57:41,092] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-16 21:57:41,094] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 1142, 2 -> 1141, 3 -> 1216) (kafka.controller.KafkaController)
[2023-02-16 21:57:41,108] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-16 21:57:41,121] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-16 21:57:42,390] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-0, my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-16 21:57:42,392] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-0 updated to LeaderAndIsr(leader=3, leaderEpoch=15, isr=List(3, 1), leaderRecoveryState=RECOVERED, partitionEpoch=22). (kafka.controller.KafkaController)
[2023-02-16 21:57:42,392] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=3, leaderEpoch=18, isr=List(3, 2), leaderRecoveryState=RECOVERED, partitionEpoch=27). (kafka.controller.KafkaController)
[2023-02-16 21:59:09,637] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 21:59:09,637] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 21:59:09,638] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 21:59:09,639] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 21:59:09,639] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 21:59:09,639] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 21:59:09,639] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-16 21:59:09,639] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 22:04:09,218] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 22:04:09,221] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 22:04:09,222] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 22:04:09,222] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 22:04:09,222] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 22:04:09,222] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 22:04:09,222] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-16 22:04:09,222] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 22:09:09,140] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 22:09:09,140] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 22:09:09,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 22:09:09,141] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 22:09:09,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 22:09:09,141] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 22:09:09,141] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-16 22:09:09,141] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-16 22:14:09,156] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-16 22:14:09,156] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-16 22:14:09,157] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap(my-kafka-topic-1-1 -> List(1, 2)) (kafka.controller.KafkaController)
[2023-02-16 22:14:09,157] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.05555555555555555 (kafka.controller.KafkaController)
[2023-02-16 22:14:09,157] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-16 22:14:09,158] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-16 22:14:09,158] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-16 22:14:09,158] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 15:38:25,446] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-17 15:38:25,478] INFO [Controller id=3] 3 successfully elected as the controller. Epoch incremented to 10 and epoch zk version is now 10 (kafka.controller.KafkaController)
[2023-02-17 15:38:25,478] INFO [Controller id=3] Registering handlers (kafka.controller.KafkaController)
[2023-02-17 15:38:25,478] INFO [Controller id=3] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-17 15:38:25,478] INFO [Controller id=3] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-17 15:38:25,478] INFO [Controller id=3] Initializing controller context (kafka.controller.KafkaController)
[2023-02-17 15:38:25,495] INFO [Controller id=3] Initialized broker epochs cache: HashMap(3 -> 1306) (kafka.controller.KafkaController)
[2023-02-17 15:38:25,511] DEBUG [Controller id=3] Register BrokerModifications handler for Set(3) (kafka.controller.KafkaController)
[2023-02-17 15:38:25,543] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-17 15:38:25,547] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2023-02-17 15:38:25,547] INFO [Controller id=3] Currently active brokers in the cluster: Set(3) (kafka.controller.KafkaController)
[2023-02-17 15:38:25,547] INFO [Controller id=3] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-17 15:38:25,559] INFO [Controller id=3] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-17 15:38:25,559] INFO [Controller id=3] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-17 15:38:25,562] INFO [Controller id=3] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-17 15:38:25,562] INFO [Controller id=3] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-17 15:38:25,562] INFO [Controller id=3] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-17 15:38:25,562] INFO [Topic Deletion Manager 3] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-17 15:38:25,565] INFO [Controller id=3] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-17 15:38:25,574] INFO [ReplicaStateMachine controllerId=3] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-17 15:38:25,579] INFO [ReplicaStateMachine controllerId=3] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-17 15:38:25,579] INFO [RequestSendThread controllerId=3] Controller 3 connected to host.docker.internal:9099 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-17 15:38:25,612] INFO [ReplicaStateMachine controllerId=3] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-17 15:38:25,666] DEBUG [ReplicaStateMachine controllerId=3] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OnlineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OfflineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OfflineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-17 15:38:25,666] INFO [PartitionStateMachine controllerId=3] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-17 15:38:25,677] INFO [PartitionStateMachine controllerId=3] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-17 15:38:25,726] DEBUG [PartitionStateMachine controllerId=3] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OnlinePartition, __consumer_offsets-13 -> OfflinePartition, __consumer_offsets-46 -> OfflinePartition, __consumer_offsets-9 -> OnlinePartition, __consumer_offsets-42 -> OnlinePartition, __consumer_offsets-21 -> OnlinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OnlinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OfflinePartition, __consumer_offsets-34 -> OfflinePartition, __consumer_offsets-16 -> OfflinePartition, __consumer_offsets-45 -> OnlinePartition, __consumer_offsets-12 -> OnlinePartition, __consumer_offsets-41 -> OfflinePartition, my-kafka-topic-1-1 -> OfflinePartition, __consumer_offsets-24 -> OnlinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OfflinePartition, __consumer_offsets-0 -> OnlinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OfflinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OfflinePartition, __consumer_offsets-4 -> OfflinePartition, __consumer_offsets-33 -> OnlinePartition, __consumer_offsets-15 -> OnlinePartition, __consumer_offsets-48 -> OnlinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, my-kafka-topic-1-2 -> OnlinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OfflinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OfflinePartition, __consumer_offsets-7 -> OfflinePartition, __consumer_offsets-40 -> OfflinePartition, __consumer_offsets-3 -> OnlinePartition, __consumer_offsets-36 -> OnlinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OfflinePartition, __consumer_offsets-10 -> OfflinePartition, __consumer_offsets-22 -> OfflinePartition, __consumer_offsets-18 -> OnlinePartition, __consumer_offsets-31 -> OfflinePartition, __consumer_offsets-27 -> OnlinePartition, __consumer_offsets-39 -> OnlinePartition, __consumer_offsets-6 -> OnlinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-17 15:38:25,726] INFO [Controller id=3] Ready to serve as the new controller with epoch 10 (kafka.controller.KafkaController)
[2023-02-17 15:38:25,726] INFO [Controller id=3] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-17 15:38:25,726] INFO [Controller id=3] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-17 15:38:25,726] INFO [Controller id=3] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-17 15:38:25,726] INFO [Controller id=3] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-17 15:38:25,726] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-17 15:38:25,746] INFO [Controller id=3] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] INFO [Controller id=3] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] TRACE [Controller id=3] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] DEBUG [Controller id=3] Topics not in preferred replica for broker 1 HashMap(__consumer_offsets-22 -> List(1), __consumer_offsets-4 -> List(1), __consumer_offsets-25 -> List(1), __consumer_offsets-49 -> List(1), __consumer_offsets-31 -> List(1), __consumer_offsets-37 -> List(1), __consumer_offsets-19 -> List(1), __consumer_offsets-43 -> List(1), __consumer_offsets-1 -> List(1), __consumer_offsets-34 -> List(1), __consumer_offsets-7 -> List(1), __consumer_offsets-46 -> List(1), __consumer_offsets-16 -> List(1), __consumer_offsets-28 -> List(1), my-kafka-topic-1-1 -> List(1, 2), __consumer_offsets-13 -> List(1), __consumer_offsets-10 -> List(1), __consumer_offsets-40 -> List(1)) (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] TRACE [Controller id=3] Leader imbalance ratio for broker 1 is 1.0 (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] DEBUG [Controller id=3] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), my-kafka-topic-1-2 -> List(2, 3), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] TRACE [Controller id=3] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] INFO [Controller id=3] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] DEBUG [Controller id=3] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 15:38:30,769] TRACE [Controller id=3] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 15:38:42,957] INFO [Controller id=3] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 2,3 (kafka.controller.KafkaController)
[2023-02-17 15:38:42,958] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-17 15:38:42,966] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2023-02-17 15:38:42,967] INFO [Controller id=3] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-17 15:38:42,972] INFO [RequestSendThread controllerId=3] Controller 3 connected to host.docker.internal:9098 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-17 15:38:42,999] DEBUG [Controller id=3] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-02-17 15:38:43,000] INFO [Controller id=3] Updated broker epochs cache: HashMap(2 -> 1361, 3 -> 1306) (kafka.controller.KafkaController)
[2023-02-17 15:38:43,003] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-17 15:38:43,017] DEBUG [Controller id=2] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-17 15:38:43,285] DEBUG [Controller id=3] Updating ISRs for partitions: Set(my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-17 15:38:43,288] DEBUG [Controller id=3] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=3, leaderEpoch=19, isr=List(3, 2), leaderRecoveryState=RECOVERED, partitionEpoch=29). (kafka.controller.KafkaController)
[2023-02-17 15:38:53,581] INFO [Controller id=3] Newly added brokers: 1, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-17 15:38:53,581] DEBUG [Channel manager on controller 3]: Controller 3 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-17 15:38:53,589] INFO [RequestSendThread controllerId=3] Starting (kafka.controller.RequestSendThread)
[2023-02-17 15:38:53,589] INFO [Controller id=3] New broker startup callback for 1 (kafka.controller.KafkaController)
[2023-02-17 15:38:53,594] INFO [RequestSendThread controllerId=3] Controller 3 connected to host.docker.internal:9097 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-17 15:38:53,607] DEBUG [Controller id=3] Register BrokerModifications handler for List(1) (kafka.controller.KafkaController)
[2023-02-17 15:38:53,607] INFO [Controller id=3] Updated broker epochs cache: HashMap(1 -> 1395, 2 -> 1361, 3 -> 1306) (kafka.controller.KafkaController)
[2023-02-17 15:38:53,628] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-17 15:38:53,642] DEBUG [Controller id=1] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-17 15:38:53,910] DEBUG [Controller id=3] Updating ISRs for partitions: Set(my-kafka-topic-1-1). (kafka.controller.KafkaController)
[2023-02-17 15:38:53,912] DEBUG [Controller id=3] ISR for partition my-kafka-topic-1-1 updated to LeaderAndIsr(leader=2, leaderEpoch=16, isr=List(2, 1), leaderRecoveryState=RECOVERED, partitionEpoch=22). (kafka.controller.KafkaController)
[2023-02-17 15:43:00,490] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-17 15:43:00,509] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 11 and epoch zk version is now 11 (kafka.controller.KafkaController)
[2023-02-17 15:43:00,511] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2023-02-17 15:43:00,515] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2023-02-17 15:43:00,517] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2023-02-17 15:43:00,519] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2023-02-17 15:43:00,535] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 1432) (kafka.controller.KafkaController)
[2023-02-17 15:43:00,545] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2023-02-17 15:43:00,581] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2023-02-17 15:43:00,594] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-17 15:43:00,596] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2023-02-17 15:43:00,596] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2023-02-17 15:43:00,597] INFO [Controller id=1] Current list of topics in the cluster: HashSet(my-kafka-topic-1, __consumer_offsets) (kafka.controller.KafkaController)
[2023-02-17 15:43:00,597] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2023-02-17 15:43:00,603] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2023-02-17 15:43:00,603] INFO [Controller id=1] List of topics ineligible for deletion: __consumer_offsets,my-kafka-topic-1 (kafka.controller.KafkaController)
[2023-02-17 15:43:00,603] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2023-02-17 15:43:00,604] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet(__consumer_offsets, my-kafka-topic-1) (kafka.controller.TopicDeletionManager)
[2023-02-17 15:43:00,605] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2023-02-17 15:43:00,616] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2023-02-17 15:43:00,623] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-17 15:43:00,629] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9097 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-17 15:43:00,648] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2023-02-17 15:43:00,724] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=__consumer_offsets,Partition=46,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=37,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=49,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=41,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=48,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=12,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=45,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=6,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=19,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=15,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=27,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=17,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=7,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=43,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=14,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=32,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=30,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=29,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=40,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=10,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=4,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=31,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=8,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=16,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=1] -> OnlineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=35,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=44,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=5,Replica=2] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=0,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=1,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=34,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=11,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=26,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=36,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=1,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=24,Replica=3] -> OfflineReplica, [Topic=my-kafka-topic-1,Partition=2,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=2,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=25,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=23,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=47,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=20,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=3,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=28,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=39,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=9,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=38,Replica=2] -> OfflineReplica, [Topic=__consumer_offsets,Partition=33,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=21,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=18,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=42,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=0,Replica=3] -> OfflineReplica, [Topic=__consumer_offsets,Partition=13,Replica=1] -> OnlineReplica, [Topic=__consumer_offsets,Partition=22,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2023-02-17 15:43:00,725] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2023-02-17 15:43:00,730] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2023-02-17 15:43:00,791] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(my-kafka-topic-1-0 -> OfflinePartition, __consumer_offsets-13 -> OnlinePartition, __consumer_offsets-46 -> OnlinePartition, __consumer_offsets-9 -> OfflinePartition, __consumer_offsets-42 -> OfflinePartition, __consumer_offsets-21 -> OfflinePartition, __consumer_offsets-17 -> OfflinePartition, __consumer_offsets-30 -> OfflinePartition, __consumer_offsets-26 -> OfflinePartition, __consumer_offsets-5 -> OfflinePartition, __consumer_offsets-38 -> OfflinePartition, __consumer_offsets-1 -> OnlinePartition, __consumer_offsets-34 -> OnlinePartition, __consumer_offsets-16 -> OnlinePartition, __consumer_offsets-45 -> OfflinePartition, __consumer_offsets-12 -> OfflinePartition, __consumer_offsets-41 -> OfflinePartition, my-kafka-topic-1-1 -> OnlinePartition, __consumer_offsets-24 -> OfflinePartition, __consumer_offsets-20 -> OfflinePartition, __consumer_offsets-49 -> OnlinePartition, __consumer_offsets-0 -> OfflinePartition, __consumer_offsets-29 -> OfflinePartition, __consumer_offsets-25 -> OnlinePartition, __consumer_offsets-8 -> OfflinePartition, __consumer_offsets-37 -> OnlinePartition, __consumer_offsets-4 -> OnlinePartition, __consumer_offsets-33 -> OfflinePartition, __consumer_offsets-15 -> OfflinePartition, __consumer_offsets-48 -> OfflinePartition, __consumer_offsets-11 -> OfflinePartition, __consumer_offsets-44 -> OfflinePartition, my-kafka-topic-1-2 -> OfflinePartition, __consumer_offsets-23 -> OfflinePartition, __consumer_offsets-19 -> OnlinePartition, __consumer_offsets-32 -> OfflinePartition, __consumer_offsets-28 -> OnlinePartition, __consumer_offsets-7 -> OnlinePartition, __consumer_offsets-40 -> OnlinePartition, __consumer_offsets-3 -> OfflinePartition, __consumer_offsets-36 -> OfflinePartition, __consumer_offsets-47 -> OfflinePartition, __consumer_offsets-14 -> OfflinePartition, __consumer_offsets-43 -> OnlinePartition, __consumer_offsets-10 -> OnlinePartition, __consumer_offsets-22 -> OnlinePartition, __consumer_offsets-18 -> OfflinePartition, __consumer_offsets-31 -> OnlinePartition, __consumer_offsets-27 -> OfflinePartition, __consumer_offsets-39 -> OfflinePartition, __consumer_offsets-6 -> OfflinePartition, __consumer_offsets-35 -> OfflinePartition, __consumer_offsets-2 -> OfflinePartition) (kafka.controller.ZkPartitionStateMachine)
[2023-02-17 15:43:00,791] INFO [Controller id=1] Ready to serve as the new controller with epoch 11 (kafka.controller.KafkaController)
[2023-02-17 15:43:00,796] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2023-02-17 15:43:00,796] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2023-02-17 15:43:00,797] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2023-02-17 15:43:00,797] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2023-02-17 15:43:00,800] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2023-02-17 15:43:00,812] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2023-02-17 15:43:05,821] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 15:43:05,821] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 15:43:05,824] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 15:43:05,824] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 15:43:05,825] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(__consumer_offsets-8 -> List(2), __consumer_offsets-35 -> List(2), __consumer_offsets-47 -> List(2), __consumer_offsets-38 -> List(2), __consumer_offsets-17 -> List(2), __consumer_offsets-29 -> List(2), __consumer_offsets-32 -> List(2), __consumer_offsets-41 -> List(2), __consumer_offsets-23 -> List(2), __consumer_offsets-11 -> List(2), my-kafka-topic-1-2 -> List(2, 3), __consumer_offsets-2 -> List(2), __consumer_offsets-14 -> List(2), __consumer_offsets-20 -> List(2), __consumer_offsets-44 -> List(2), __consumer_offsets-5 -> List(2), __consumer_offsets-26 -> List(2)) (kafka.controller.KafkaController)
[2023-02-17 15:43:05,825] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 1.0 (kafka.controller.KafkaController)
[2023-02-17 15:43:05,825] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-17 15:43:05,826] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap(__consumer_offsets-30 -> List(3), __consumer_offsets-21 -> List(3), __consumer_offsets-33 -> List(3), __consumer_offsets-36 -> List(3), __consumer_offsets-48 -> List(3), __consumer_offsets-6 -> List(3), __consumer_offsets-0 -> List(3), __consumer_offsets-45 -> List(3), __consumer_offsets-27 -> List(3), __consumer_offsets-9 -> List(3), __consumer_offsets-42 -> List(3), my-kafka-topic-1-0 -> List(3, 1), __consumer_offsets-3 -> List(3), __consumer_offsets-18 -> List(3), __consumer_offsets-15 -> List(3), __consumer_offsets-24 -> List(3), __consumer_offsets-39 -> List(3), __consumer_offsets-12 -> List(3)) (kafka.controller.KafkaController)
[2023-02-17 15:43:05,826] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 1.0 (kafka.controller.KafkaController)
[2023-02-17 15:43:05,826] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by AutoTriggered (kafka.controller.KafkaController)
[2023-02-17 15:43:28,844] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2023-02-17 15:43:28,844] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2023-02-17 15:43:28,850] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-17 15:43:28,851] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2023-02-17 15:43:28,858] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9098 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-17 15:43:28,890] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2023-02-17 15:43:28,892] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 1432, 2 -> 1488) (kafka.controller.KafkaController)
[2023-02-17 15:43:28,894] INFO [ControllerEventThread controllerId=2] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-17 15:43:28,906] DEBUG [Controller id=2] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-17 15:43:29,205] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-1). (kafka.controller.KafkaController)
[2023-02-17 15:43:29,209] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-1 updated to LeaderAndIsr(leader=1, leaderEpoch=18, isr=List(1, 2), leaderRecoveryState=RECOVERED, partitionEpoch=25). (kafka.controller.KafkaController)
[2023-02-17 15:43:36,586] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2023-02-17 15:43:36,586] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2023-02-17 15:43:36,595] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2023-02-17 15:43:36,595] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2023-02-17 15:43:36,600] INFO [RequestSendThread controllerId=1] Controller 1 connected to host.docker.internal:9099 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2023-02-17 15:43:36,617] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2023-02-17 15:43:36,620] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 1432, 2 -> 1488, 3 -> 1521) (kafka.controller.KafkaController)
[2023-02-17 15:43:36,639] INFO [ControllerEventThread controllerId=3] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2023-02-17 15:43:36,653] DEBUG [Controller id=3] Broker 1 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
[2023-02-17 15:43:37,921] DEBUG [Controller id=1] Updating ISRs for partitions: Set(my-kafka-topic-1-0, my-kafka-topic-1-2). (kafka.controller.KafkaController)
[2023-02-17 15:43:37,929] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-0 updated to LeaderAndIsr(leader=3, leaderEpoch=18, isr=List(3, 1), leaderRecoveryState=RECOVERED, partitionEpoch=26). (kafka.controller.KafkaController)
[2023-02-17 15:43:37,929] DEBUG [Controller id=1] ISR for partition my-kafka-topic-1-2 updated to LeaderAndIsr(leader=3, leaderEpoch=22, isr=List(3, 2), leaderRecoveryState=RECOVERED, partitionEpoch=33). (kafka.controller.KafkaController)
[2023-02-17 15:48:04,360] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 15:48:04,360] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 15:48:04,361] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 15:48:04,362] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 15:48:04,362] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 15:48:04,362] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 15:48:04,362] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 15:48:04,362] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 15:53:04,341] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 15:53:04,341] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 15:53:04,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 15:53:04,342] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 15:53:04,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 15:53:04,342] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 15:53:04,342] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 15:53:04,342] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 15:58:04,344] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 15:58:04,344] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 15:58:04,344] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 15:58:04,344] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 15:58:04,345] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 15:58:04,345] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 15:58:04,345] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 15:58:04,345] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:03:04,350] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 16:03:04,355] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 16:03:04,356] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:03:04,356] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:03:04,357] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 16:03:04,357] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 16:03:04,357] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:03:04,357] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:08:04,363] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 16:08:04,363] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 16:08:04,364] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:08:04,365] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:08:04,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 16:08:04,365] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 16:08:04,365] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:08:04,365] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:13:04,376] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 16:13:04,376] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 16:13:04,376] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:13:04,376] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:13:04,377] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 16:13:04,377] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 16:13:04,377] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:13:04,377] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:18:04,388] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 16:18:04,388] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 16:18:04,389] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:18:04,389] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:18:04,389] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 16:18:04,390] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 16:18:04,390] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:18:04,390] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:23:04,405] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 16:23:04,405] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 16:23:04,406] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:23:04,406] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:23:04,406] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 16:23:04,406] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 16:23:04,406] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:23:04,406] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:28:04,425] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 16:28:04,425] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 16:28:04,425] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:28:04,426] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:28:04,426] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 16:28:04,426] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 16:28:04,426] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:28:04,426] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:33:04,448] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 16:33:04,448] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 16:33:04,449] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:33:04,449] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:33:04,449] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 16:33:04,449] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 16:33:04,449] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:33:04,449] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:38:04,457] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2023-02-17 16:38:04,457] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2023-02-17 16:38:04,457] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:38:04,457] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2023-02-17 16:38:04,458] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap(my-kafka-topic-1-2 -> List(2, 3)) (kafka.controller.KafkaController)
[2023-02-17 16:38:04,458] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.058823529411764705 (kafka.controller.KafkaController)
[2023-02-17 16:38:04,458] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2023-02-17 16:38:04,458] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
