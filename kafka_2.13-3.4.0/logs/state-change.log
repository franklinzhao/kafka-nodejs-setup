[2023-02-14 17:15:47,345] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-14 17:18:41,153] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-14 17:18:41,153] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(2) for 0 partitions (state.change.logger)
[2023-02-14 17:19:29,959] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-14 17:19:29,960] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(3) for 0 partitions (state.change.logger)
[2023-02-14 17:25:04,624] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-0 state from NonExistentPartition to NewPartition with assigned replicas 3,1 (state.change.logger)
[2023-02-14 17:25:04,624] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-1 state from NonExistentPartition to NewPartition with assigned replicas 1,2 (state.change.logger)
[2023-02-14 17:25:04,624] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-2 state from NonExistentPartition to NewPartition with assigned replicas 2,3 (state.change.logger)
[2023-02-14 17:25:04,625] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 17:25:04,627] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 17:25:04,645] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3, 1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 17:25:04,645] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1, 2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 17:25:04,645] INFO [Controller id=1 epoch=1] Changed partition my-kafka-topic-1-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2, 3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 17:25:04,647] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 17:25:04,648] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 2 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 17:25:04,648] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 3 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 17:25:04,648] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 3 partitions (state.change.logger)
[2023-02-14 17:25:04,650] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 17:25:04,653] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,653] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,655] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 2 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,672] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-14 17:25:04,674] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 2 from controller 1 epoch 1 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-14 17:25:04,762] INFO [Broker id=1] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 17:25:04,770] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2,3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 17:25:04,806] INFO [Broker id=1] Follower my-kafka-topic-1-0 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 3. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 17:25:04,807] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 3 for 1 partitions (state.change.logger)
[2023-02-14 17:25:04,811] INFO [Broker id=2] Follower my-kafka-topic-1-1 starts at leader epoch 0 from offset 0 with partition epoch 0 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 17:25:04,811] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 1 with correlation id 2 for 1 partitions (state.change.logger)
[2023-02-14 17:25:04,850] INFO [Broker id=1] Finished LeaderAndIsr request in 199ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,857] INFO [Broker id=2] Finished LeaderAndIsr request in 204ms correlationId 2 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 17:25:04,860] INFO [Broker id=1] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-02-14 17:25:04,866] INFO [Broker id=2] Add 3 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 3 (state.change.logger)
[2023-02-14 17:25:41,120] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-14 17:25:41,121] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 5 (state.change.logger)
[2023-02-14 17:25:41,121] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 4 (state.change.logger)
[2023-02-14 20:30:22,543] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,548] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 state from NonExistentPartition to NewPartition with assigned replicas 3 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 state from NonExistentPartition to NewPartition with assigned replicas 2 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 state from NonExistentPartition to NewPartition with assigned replicas 1 (state.change.logger)
[2023-02-14 20:30:22,549] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 20:30:22,550] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-22 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-30 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-25 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-35 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-37 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-38 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-13 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-8 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,600] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-21 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-4 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-27 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-7 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-9 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-46 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-41 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-33 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-23 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-49 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-47 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-16 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-28 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-31 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-36 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-42 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-3 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-18 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-15 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-24 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-17 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-48 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-19 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-11 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-2 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-43 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-6 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-14 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-20 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-0 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-44 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-39 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-12 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-45 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=0, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-1 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-5 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-26 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-29 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-34 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-10 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-32 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=0, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Changed partition __consumer_offsets-40 from NewPartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=0, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=0) (state.change.logger)
[2023-02-14 20:30:22,601] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 1 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:30:22,602] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 2 with 16 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:30:22,602] INFO [Controller id=1 epoch=1] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:30:22,602] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 50 partitions (state.change.logger)
[2023-02-14 20:30:22,603] INFO [Controller id=1 epoch=1] Sending UpdateMetadata request to brokers HashSet() for 0 partitions (state.change.logger)
[2023-02-14 20:30:22,607] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 6 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:30:22,606] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 5 from controller 1 for 16 partitions (state.change.logger)
[2023-02-14 20:30:22,616] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 6 from controller 1 epoch 1 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-14 20:30:22,621] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 1 as part of the become-leader transition for 16 partitions (state.change.logger)
[2023-02-14 20:30:22,640] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,648] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,665] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,683] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,693] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,713] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,718] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,739] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,743] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,759] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,773] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,784] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,797] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,810] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,830] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,832] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,863] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,865] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,887] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,900] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,917] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,948] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,948] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,979] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:22,984] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,001] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,016] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,024] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,044] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,051] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,061] INFO [Broker id=1] Finished LeaderAndIsr request in 454ms correlationId 6 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:30:23,062] INFO [Broker id=1] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 7 (state.change.logger)
[2023-02-14 20:30:23,075] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,104] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,129] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:30:23,174] INFO [Broker id=2] Finished LeaderAndIsr request in 568ms correlationId 5 from controller 1 for 16 partitions (state.change.logger)
[2023-02-14 20:30:23,176] INFO [Broker id=2] Add 50 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 1 with correlation id 6 (state.change.logger)
[2023-02-14 20:33:57,467] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-14 20:33:57,499] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 18 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 20:33:57,501] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 19 partitions (state.change.logger)
[2023-02-14 20:33:57,540] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-8 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-35 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-47 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-38 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-17 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition my-kafka-topic-1-1 state changed to (Leader:1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-29 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-32 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,541] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-41 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-23 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-11 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:2,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-14 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-20 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-44 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-5 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,542] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-26 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 2 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-30 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-21 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-33 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-36 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-48 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition my-kafka-topic-1-2 state changed to (Leader:-1,ISR:2,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:2,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-6 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-0 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,562] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-45 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-27 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-9 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-42 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition my-kafka-topic-1-0 state changed to (Leader:-1,ISR:1,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-3 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-18 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-15 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-24 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-39 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Partition __consumer_offsets-12 state changed to (Leader:-1,ISR:3,LeaderRecoveryState:RECOVERED,LeaderEpoch:1,ZkVersion:1,ControllerEpoch:2) after removing replica 3 from the ISR as part of transition to OfflineReplica (state.change.logger)
[2023-02-14 20:33:57,563] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 1 become-follower partitions (state.change.logger)
[2023-02-14 20:33:57,564] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 36 partitions (state.change.logger)
[2023-02-14 20:33:57,588] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-14 20:33:57,600] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,602] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-35 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-35 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,602] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-47 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-47 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,602] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-38 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-38 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-29 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-29 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-32 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-32 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-8 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-8 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,603] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-41 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-41 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-23 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-23 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,604] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-17 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-17 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,605] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-11 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-11 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition my-kafka-topic-1-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-2 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-2 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-14 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-14 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,606] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-20 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-20 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-44 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-44 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,607] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-5 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-5 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,608] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-26 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-26 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.PartitionStateMachine.startup(PartitionStateMachine.scala:44)
	at kafka.controller.KafkaController.onControllerFailover(KafkaController.scala:278)
	at kafka.controller.KafkaController.elect(KafkaController.scala:1525)
	at kafka.controller.KafkaController.processStartup(KafkaController.scala:1432)
	at kafka.controller.KafkaController.process(KafkaController.scala:2606)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:33:57,608] INFO [Controller id=1 epoch=2] Changed partition my-kafka-topic-1-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=1, leaderEpoch=2, isr=List(1), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:33:57,608] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 1 with 1 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:33:57,609] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,610] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 1 from controller 1 epoch 2 as part of the become-leader transition for 18 partitions (state.change.logger)
[2023-02-14 20:33:57,621] INFO [Broker id=1] Leader __consumer_offsets-37 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,633] INFO [Broker id=1] Leader __consumer_offsets-7 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,639] INFO [Broker id=1] Leader __consumer_offsets-22 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,646] INFO [Broker id=1] Leader __consumer_offsets-10 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,654] INFO [Broker id=1] Leader __consumer_offsets-31 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,660] INFO [Broker id=1] Leader __consumer_offsets-46 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,666] INFO [Broker id=1] Leader __consumer_offsets-1 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,672] INFO [Broker id=1] Leader __consumer_offsets-16 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,676] INFO [Broker id=1] Leader __consumer_offsets-19 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,682] INFO [Broker id=1] Leader __consumer_offsets-34 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,688] INFO [Broker id=1] Leader __consumer_offsets-4 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,693] INFO [Broker id=1] Leader __consumer_offsets-25 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,700] INFO [Broker id=1] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 0 from offset 18 with partition epoch 0, high watermark 18, ISR [1,2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,701] INFO [Broker id=1] Leader __consumer_offsets-40 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,707] INFO [Broker id=1] Leader __consumer_offsets-43 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,711] INFO [Broker id=1] Leader __consumer_offsets-13 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,717] INFO [Broker id=1] Leader __consumer_offsets-28 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,722] INFO [Broker id=1] Leader __consumer_offsets-49 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 0 from offset 0 with partition epoch 0, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,729] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition my-kafka-topic-1-0 (last update controller epoch 1) but cannot become follower since the new leader 3 is unavailable. (state.change.logger)
[2023-02-14 20:33:57,730] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 0 partitions (state.change.logger)
[2023-02-14 20:33:57,771] INFO [Broker id=1] Finished LeaderAndIsr request in 183ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-14 20:33:57,778] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-02-14 20:33:57,780] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 20:33:57,780] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,781] INFO [Broker id=1] Leader my-kafka-topic-1-1 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 1 from offset 18 with partition epoch 1, high watermark 18, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was 0. (state.change.logger)
[2023-02-14 20:33:57,787] ERROR [Broker id=1] Received LeaderAndIsrRequest with correlation id 3 from controller 1 epoch 2 for partition my-kafka-topic-1-0 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:33:57,787] INFO [Broker id=1] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 3 for 0 partitions (state.change.logger)
[2023-02-14 20:33:57,787] INFO [Broker id=1] Finished LeaderAndIsr request in 7ms correlationId 3 from controller 1 for 2 partitions (state.change.logger)
[2023-02-14 20:33:57,789] INFO [Broker id=1] Add 36 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-02-14 20:33:57,790] INFO [Broker id=1] Handling LeaderAndIsr request correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,791] INFO [Broker id=1] Stopped fetchers as part of LeaderAndIsr request correlationId 5 from controller 1 epoch 2 as part of the become-leader transition for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,791] INFO [Broker id=1] Leader my-kafka-topic-1-0 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [1], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:33:57,797] INFO [Broker id=1] Finished LeaderAndIsr request in 7ms correlationId 5 from controller 1 for 1 partitions (state.change.logger)
[2023-02-14 20:33:57,798] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
[2023-02-14 20:34:03,888] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1) for 0 partitions (state.change.logger)
[2023-02-14 20:34:03,889] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(2) for 53 partitions (state.change.logger)
[2023-02-14 20:34:03,892] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 0 become-leader and 18 become-follower partitions (state.change.logger)
[2023-02-14 20:34:03,893] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 18 partitions (state.change.logger)
[2023-02-14 20:34:03,894] INFO [Broker id=1] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2023-02-14 20:34:03,912] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-30 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-30 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,912] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-36 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-36 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-21 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-21 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-27 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-27 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-9 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-9 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-33 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-33 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-42 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-42 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-3 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-3 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-18 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-18 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-15 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-15 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-24 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-24 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,913] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-48 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-48 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-6 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-6 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-0 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-0 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-39 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-39 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-12 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-12 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] ERROR [Controller id=1 epoch=2] Controller 1 epoch 2 failed to change state for partition __consumer_offsets-45 from OfflinePartition to OnlinePartition (state.change.logger)
kafka.common.StateChangeFailedException: Failed to elect leader for partition __consumer_offsets-45 under strategy OfflinePartitionLeaderElectionStrategy(false)
	at kafka.controller.ZkPartitionStateMachine.$anonfun$doElectLeaderForPartitions$7(PartitionStateMachine.scala:433)
	at scala.collection.IterableOnceOps.foreach(IterableOnce.scala:575)
	at scala.collection.IterableOnceOps.foreach$(IterableOnce.scala:573)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:933)
	at kafka.controller.ZkPartitionStateMachine.doElectLeaderForPartitions(PartitionStateMachine.scala:430)
	at kafka.controller.ZkPartitionStateMachine.electLeaderForPartitions(PartitionStateMachine.scala:336)
	at kafka.controller.ZkPartitionStateMachine.doHandleStateChanges(PartitionStateMachine.scala:242)
	at kafka.controller.ZkPartitionStateMachine.handleStateChanges(PartitionStateMachine.scala:162)
	at kafka.controller.PartitionStateMachine.triggerOnlineStateChangeForPartitions(PartitionStateMachine.scala:76)
	at kafka.controller.PartitionStateMachine.triggerOnlinePartitionStateChange(PartitionStateMachine.scala:61)
	at kafka.controller.KafkaController.onBrokerStartup(KafkaController.scala:547)
	at kafka.controller.KafkaController.processBrokerChange(KafkaController.scala:1599)
	at kafka.controller.KafkaController.process(KafkaController.scala:2570)
	at kafka.controller.QueuedEvent.process(ControllerEventManager.scala:53)
	at kafka.controller.ControllerEventManager$ControllerEventThread.process$1(ControllerEventManager.scala:131)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1(ControllerEventManager.scala:134)
	at kafka.controller.ControllerEventManager$ControllerEventThread.$anonfun$doWork$1$adapted(ControllerEventManager.scala:134)
	at com.yammer.metrics.core.Timer.time(Timer.java:91)
	at kafka.controller.ControllerEventManager$ControllerEventThread.doWork(ControllerEventManager.scala:134)
	at kafka.utils.ShutdownableThread.run(ShutdownableThread.scala:96)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-35 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-47 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-38 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-29 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,914] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-32 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-8 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-41 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-23 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-17 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-11 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition my-kafka-topic-1-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=3) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-2 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-14 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-20 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-44 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-5 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-26 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=2, leaderEpoch=2, isr=List(2), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 2 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:34:03,915] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 17 partitions (state.change.logger)
[2023-02-14 20:34:03,917] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 9 (state.change.logger)
[2023-02-14 20:34:04,075] INFO [Broker id=2] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2023-02-14 20:34:04,096] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-14 20:34:04,115] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-35 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,118] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition my-kafka-topic-1-2 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,119] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-5 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,121] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-20 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,121] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-41 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,122] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-29 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,122] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-44 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,122] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-14 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,123] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-2 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,123] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-23 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,124] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-38 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,126] INFO [Broker id=2] Follower my-kafka-topic-1-1 starts at leader epoch 1 from offset 18 with partition epoch 1 and high watermark 18. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,126] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-8 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,126] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-11 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,126] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-26 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,127] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-47 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,127] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-17 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,128] ERROR [Broker id=2] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-32 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:04,131] INFO [Broker id=2] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 1 partitions (state.change.logger)
[2023-02-14 20:34:04,167] INFO [Broker id=2] Finished LeaderAndIsr request in 71ms correlationId 1 from controller 1 for 18 partitions (state.change.logger)
[2023-02-14 20:34:04,171] INFO [Broker id=2] Add 18 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-02-14 20:34:04,173] INFO [Broker id=2] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:34:04,175] INFO [Broker id=2] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-14 20:34:04,179] INFO [Broker id=2] Leader __consumer_offsets-35 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,190] INFO [Broker id=2] Leader my-kafka-topic-1-2 with topic id Some(ZHtMpig4RJ6nGa8VZWDLUA) starts at leader epoch 2 from offset 15 with partition epoch 3, high watermark 15, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,199] INFO [Broker id=2] Leader __consumer_offsets-5 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,206] INFO [Broker id=2] Leader __consumer_offsets-20 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,209] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 1 partitions (state.change.logger)
[2023-02-14 20:34:04,210] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 10 (state.change.logger)
[2023-02-14 20:34:04,212] INFO [Broker id=2] Leader __consumer_offsets-41 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,218] INFO [Broker id=2] Leader __consumer_offsets-29 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,224] INFO [Broker id=2] Leader __consumer_offsets-44 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,229] INFO [Broker id=2] Leader __consumer_offsets-14 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,234] INFO [Broker id=2] Leader __consumer_offsets-2 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,240] INFO [Broker id=2] Leader __consumer_offsets-23 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,245] INFO [Broker id=2] Leader __consumer_offsets-38 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,251] INFO [Broker id=2] Leader __consumer_offsets-8 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,255] INFO [Broker id=2] Leader __consumer_offsets-11 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,260] INFO [Broker id=2] Leader __consumer_offsets-26 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,264] INFO [Broker id=2] Leader __consumer_offsets-47 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,269] INFO [Broker id=2] Leader __consumer_offsets-17 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,273] INFO [Broker id=2] Leader __consumer_offsets-32 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [2], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:04,305] INFO [Broker id=2] Finished LeaderAndIsr request in 132ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:34:04,308] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-02-14 20:34:04,309] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2023-02-14 20:34:09,468] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2) for 0 partitions (state.change.logger)
[2023-02-14 20:34:09,470] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(3) for 53 partitions (state.change.logger)
[2023-02-14 20:34:09,470] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 3 with 0 become-leader and 19 become-follower partitions (state.change.logger)
[2023-02-14 20:34:09,470] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 19 partitions (state.change.logger)
[2023-02-14 20:34:09,472] INFO [Broker id=1] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 12 (state.change.logger)
[2023-02-14 20:34:09,472] INFO [Broker id=2] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 7 (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-30 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-21 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-33 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-36 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-48 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-6 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-0 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-45 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-27 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-9 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-42 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-3 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-18 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-15 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-24 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-39 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,486] INFO [Controller id=1 epoch=2] Changed partition __consumer_offsets-12 from OfflinePartition to OnlinePartition with state LeaderAndIsr(leader=3, leaderEpoch=2, isr=List(3), leaderRecoveryState=RECOVERED, partitionEpoch=2) (state.change.logger)
[2023-02-14 20:34:09,487] INFO [Controller id=1 epoch=2] Sending LeaderAndIsr request to broker 3 with 17 become-leader and 0 become-follower partitions (state.change.logger)
[2023-02-14 20:34:09,487] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 17 partitions (state.change.logger)
[2023-02-14 20:34:09,489] INFO [Broker id=1] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 13 (state.change.logger)
[2023-02-14 20:34:09,489] INFO [Broker id=2] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 8 (state.change.logger)
[2023-02-14 20:34:09,652] INFO [Broker id=3] Add 53 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 0 (state.change.logger)
[2023-02-14 20:34:09,673] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-14 20:34:09,699] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-3 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,780] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-18 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,810] INFO [Broker id=3] Follower my-kafka-topic-1-2 starts at leader epoch 2 from offset 0 with partition epoch 3 and high watermark 0. Current leader is 2. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:09,810] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-39 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,824] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-9 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,839] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-24 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,869] INFO [Broker id=3] Follower my-kafka-topic-1-0 starts at leader epoch 2 from offset 0 with partition epoch 2 and high watermark 0. Current leader is 1. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:09,869] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-27 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,883] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-42 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,897] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-12 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,911] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-33 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,925] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-48 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,941] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-21 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,955] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-36 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,970] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-6 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,984] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-45 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:09,998] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-15 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:10,015] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-30 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:10,029] ERROR [Broker id=3] Received LeaderAndIsrRequest with correlation id 1 from controller 1 epoch 2 for partition __consumer_offsets-0 (last update controller epoch 2) but cannot become follower since the new leader -1 is unavailable. (state.change.logger)
[2023-02-14 20:34:10,044] INFO [Broker id=3] Stopped fetchers as part of become-follower request from controller 1 epoch 2 with correlation id 1 for 2 partitions (state.change.logger)
[2023-02-14 20:34:10,081] INFO [Broker id=3] Finished LeaderAndIsr request in 408ms correlationId 1 from controller 1 for 19 partitions (state.change.logger)
[2023-02-14 20:34:10,086] INFO [Broker id=3] Add 19 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 2 (state.change.logger)
[2023-02-14 20:34:10,087] INFO [Broker id=3] Handling LeaderAndIsr request correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:34:10,089] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-14 20:34:10,091] INFO [Broker id=3] Stopped fetchers as part of LeaderAndIsr request correlationId 3 from controller 1 epoch 2 as part of the become-leader transition for 17 partitions (state.change.logger)
[2023-02-14 20:34:10,091] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 14 (state.change.logger)
[2023-02-14 20:34:10,091] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 9 (state.change.logger)
[2023-02-14 20:34:10,096] INFO [Broker id=3] Leader __consumer_offsets-3 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,105] INFO [Broker id=3] Leader __consumer_offsets-18 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,111] INFO [Broker id=3] Leader __consumer_offsets-39 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,116] INFO [Broker id=3] Leader __consumer_offsets-9 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,122] INFO [Broker id=3] Leader __consumer_offsets-24 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,128] INFO [Broker id=3] Leader __consumer_offsets-27 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,134] INFO [Broker id=3] Leader __consumer_offsets-42 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,140] INFO [Broker id=3] Leader __consumer_offsets-12 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,144] INFO [Broker id=3] Leader __consumer_offsets-33 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,150] INFO [Broker id=3] Leader __consumer_offsets-48 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,155] INFO [Broker id=3] Leader __consumer_offsets-21 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,160] INFO [Broker id=3] Leader __consumer_offsets-36 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,165] INFO [Controller id=1 epoch=2] Sending UpdateMetadata request to brokers HashSet(1, 2, 3) for 1 partitions (state.change.logger)
[2023-02-14 20:34:10,166] INFO [Broker id=3] Leader __consumer_offsets-6 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,167] INFO [Broker id=1] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 15 (state.change.logger)
[2023-02-14 20:34:10,167] INFO [Broker id=2] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 10 (state.change.logger)
[2023-02-14 20:34:10,173] INFO [Broker id=3] Leader __consumer_offsets-45 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,177] INFO [Broker id=3] Leader __consumer_offsets-15 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,183] INFO [Broker id=3] Leader __consumer_offsets-30 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,187] INFO [Broker id=3] Leader __consumer_offsets-0 with topic id Some(q2Ilz05dR6qgB0d46xMGWA) starts at leader epoch 2 from offset 0 with partition epoch 2, high watermark 0, ISR [3], adding replicas [] and removing replicas []. Previous leader epoch was -1. (state.change.logger)
[2023-02-14 20:34:10,220] INFO [Broker id=3] Finished LeaderAndIsr request in 133ms correlationId 3 from controller 1 for 17 partitions (state.change.logger)
[2023-02-14 20:34:10,222] INFO [Broker id=3] Add 17 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 4 (state.change.logger)
[2023-02-14 20:34:10,224] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 5 (state.change.logger)
[2023-02-14 20:34:10,225] INFO [Broker id=3] Add 1 partitions and deleted 0 partitions from metadata cache in response to UpdateMetadata request sent by controller 1 epoch 2 with correlation id 6 (state.change.logger)
